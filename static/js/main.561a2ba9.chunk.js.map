{"version":3,"sources":["components/config.tsx","components/Footer/index.tsx","globalStyles/index.tsx","theme/index.tsx","components/AboutMe/Contact/config.tsx","components/AboutMe/Contact/index.tsx","components/AboutMe/Hobbies/config.tsx","components/AboutMe/Hobbies/index.tsx","utilities/index.tsx","services/config.tsx","services/GitHub/GitHub.tsx","components/AboutMe/Personal/index.tsx","components/AboutMe/Education/config.tsx","components/AboutMe/Education/index.tsx","components/AboutMe/Experience/config.tsx","components/AboutMe/Experience/index.tsx","components/AboutMe/ButtonLinks/config.tsx","components/CustomButtonLink/index.tsx","components/AboutMe/ButtonLinks/index.tsx","components/AboutMe/PassionAbout/config.tsx","components/AboutMe/PassionAbout/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/Repositories/CardComponent/index.tsx","components/Portfolio/GitHub/Repositories/index.tsx","components/CustomHooks/useDebounce.tsx","components/Portfolio/GitHub/useGitHubFaIconSpinner.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/GitHub/filterHooks.tsx","components/Portfolio/index.tsx","components/index.tsx","components/useTabs.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","useStyles","makeStyles","theme","root","padding","spacing","color","display","alignItems","justifyContent","a","fontSize","Copyright","classes","data-test-id","className","Date","getFullYear","rel","href","target","Footer","Box","bgcolor","createStyles","boxSizing","html","height","width","body","backgroundColor","textDecoration","GlobalStyles","createMuiTheme","palette","background","default","colors","common","white","paper","primary","main","secondary","typography","fontFamily","join","contacts","name","link","title","text","list","item","Contact","mb","fontWeight","Typography","variant","List","map","index","ListItem","Link","component","hobbies","Hobbies","calculateAge","dateOfBirth","todayDate","todayDay","getDate","todayMonth","getMonth","todayYear","birthDate","birthDay","birthMonth","age","getOptions","baseUrl","endPoint","parameters","url","URLSearchParams","toString","method","headers","Accept","basePath","this","username","axios","repository","avatar","margin","marginBottom","personal","textAlign","bio","Personal","useQuery","GitHub","getUserData","then","data","isLoading","isError","CircularProgress","Alert","severity","Avatar","alt","src","avatar_url","location","education","university","duration","description","marginRight","itemName","itemDescription","itemLocation","itemDuration","Education","flexDirection","experience","from","to","jobTitle","company","details","Experience","buttons","button","outline","transition","borderRadius","outlineOffset","boxShadow","CustomButtonLink","size","Button","startIcon","ButtonLinks","passionateAbout","PassionateAbout","marginTop","AboutMe","Container","maxWidth","Paper","CardComponent","language","stargazers_count","forks_count","html_url","Card","style","CardContent","gutterBottom","CardActions","grid","Repositories","repositories","Grid","container","repo","xs","sm","md","id","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchFields","search","select","GitHubService","getUserRepositories","setSearch","handleSearch","e","useSearch","debouncedSearch","selectedLanguage","setSelectedLanguage","languages","useMemo","undefined","uniqueLanguages","Set","filter","Array","handleLanguage","useUniqueLanguages","computedData","tempRepositories","length","toLowerCase","includes","useFilteredData","gitHubFaIcon","useGitHubFaIconSpinner","Tooltip","placement","TextField","onChange","FormControl","InputLabel","Select","native","Portfolio","queryClient","QueryClient","minHeight","paddingBottom","footer","tabs","App","setValue","showTabContent","useTabs","QueryClientProvider","client","ThemeProvider","Tabs","event","newValue","TabIndicatorProps","tabItem","Tab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.561a2ba9.chunk.js","sourcesContent":["import { AccountBox, Work } from \"@material-ui/icons\";\n\ninterface TabItem {\n    label: string;\n    icon: JSX.Element;\n}\n\nconst tabItems: TabItem[] = [\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\n    { label: \"PORTFOLIO\", icon: <Work /> },\n];\n\nexport { tabItems };\n","import { FC } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 1),\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    a: {\n        color: \"white\",\n        fontSize: \"15px\",\n    },\n}));\n\nexport const Copyright: FC = () => {\n    const classes = useStyles();\n    return (\n        <h5 data-test-id=\"copyright\" className=\"copyright\">\n            © {new Date().getFullYear()} Copyright:\n            <a\n                className=\"underline\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/alexiszamanidis\"\n                target=\"_blank\"\n            >\n                <b className={classes.a} data-test-id=\"copyright-name\">\n                    {\" Alexis Zamanidis\"}\n                </b>\n            </a>\n        </h5>\n    );\n};\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n    return (\n        <Box data-test-id=\"footer\" className={classes.root} bgcolor=\"primary.main\">\n            <Copyright data-test-id=\"copyright-inside-footer\" />\n        </Box>\n    );\n};\n\nexport default Footer;\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        \"@global\": {\n            \"*\": {\n                boxSizing: \"border-box\",\n            },\n            html: {\n                height: \"100%\",\n                width: \"100%\",\n            },\n            body: {\n                backgroundColor: \"#f4f6f8\",\n                height: \"100%\",\n                width: \"100%\",\n            },\n            a: {\n                textDecoration: \"none\",\n            },\n        },\n    })\n);\n\nconst GlobalStyles = () => {\n    useStyles();\n\n    return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: colors.common.white,\n            paper: colors.common.white,\n        },\n        primary: {\n            main: \"#3F51B5\",\n        },\n        secondary: {\n            main: \"#fff\",\n        },\n    },\n    typography: {\n        fontFamily: [\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n    },\n});\n\nexport default theme;\n","interface ContactItem {\n    icon: string;\n    name: string;\n    link: string;\n}\n\nconst contacts: ContactItem[] = [\n    {\n        icon: \"fa fa-phone\",\n        name: \"+30 698-044-3908\",\n        link: \"tel:+30698-044-3908\",\n    },\n    {\n        icon: \"fa fa-envelope\",\n        name: \"alexiszamanidis@outlook.com\",\n        link: \"mailto:alexiszamanidis@outlook.com\",\n    },\n];\n\nexport { contacts };\n","import { FC } from \"react\";\nimport { contacts } from \"./config\";\nimport { Box, Link, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n    link: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Contact: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Contact</Typography>\n            </Box>\n            <List className={classes.list}>\n                {contacts.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Link\n                                href={item.link}\n                                className={classes.link}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                <Typography component={\"span\"}>\n                                    <div className=\"contact\">\n                                        <i className={classes.title + \" \" + item.icon}></i>\n                                        {item.name}\n                                    </div>\n                                </Typography>\n                            </Link>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Contact;\n","interface HobbyItem {\n    name: string;\n}\n\nconst hobbies: HobbyItem[] = [\n    {\n        name: \"Playing Football and Basketball\",\n    },\n    {\n        name: \"Calisthenics Workout\",\n    },\n];\n\nexport { hobbies };\n","import { FC } from \"react\";\nimport { hobbies } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Hobbies: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Hobbies</Typography>\n            </Box>\n            <List className={classes.list}>\n                {hobbies.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Hobbies;\n","export const trimString = (string: string | null, limit: number): string => {\n    return string !== null\n        ? string.length <= limit\n            ? string\n            : string.substring(0, limit) + \"...\"\n        : \"\";\n};\n\nexport const calculateAge = (dateOfBirth: string): number => {\n    let todayDate = new Date();\n    let todayDay = todayDate.getDate();\n    let todayMonth = todayDate.getMonth();\n    let todayYear = todayDate.getFullYear();\n\n    let birthDate = new Date(dateOfBirth);\n    let birthDay = birthDate.getDate();\n    let birthMonth = birthDate.getMonth();\n    let birthYear = birthDate.getFullYear();\n\n    let age = todayYear - birthYear;\n\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\n    else return age - 1;\n};\n\nexport const findByDataTestIdAttribute = (component: any, attribute: string) => {\n    const wrapper = component.find(`[data-test-id=\"${attribute}\"]`);\n    return wrapper;\n};\n","export const getOptions = (baseUrl: string, endPoint: string, parameters?: any): object => {\n    return {\n        url: `${baseUrl}${endPoint}?` + new URLSearchParams(parameters).toString(),\n        method: \"GET\",\n        headers: {\n            Accept: \"application/vnd.github.v3+json\",\n        },\n    };\n};\n","import axios from \"axios\";\nimport { getOptions } from \"../config\";\n\n// const clientId = \"\";\n// const clientSecret = \"\";\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\n\nclass GitHubService {\n    basePath: string;\n\n    constructor() {\n        this.basePath = \"https://api.github.com\";\n    }\n\n    getUserData(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}`));\n    }\n\n    getUserRepositories(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/repos`));\n    }\n\n    getRepositoryTopics(username: string, repository: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/${repository}/topics`));\n    }\n}\n\nexport default new GitHubService();\n","import { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { calculateAge } from \"../../../utilities\";\nimport GitHub from \"../../../services/GitHub/GitHub\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: \"15px\",\n    },\n    personal: {\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        color: theme.palette.text.primary,\n    },\n    bio: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Personal: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\"userData\", () =>\n        GitHub.getUserData(\"alexiszamanidis\").then(({ data }) => data)\n    );\n\n    return (\n        <Box mb={5}>\n            {isLoading ? (\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <CircularProgress />\n                </Box>\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <div>\n                    <Avatar\n                        alt=\"Alexis Zamanidis\"\n                        src={data.avatar_url}\n                        className={classes.avatar}\n                    />\n                    <div className={classes.personal}>\n                        <div className={classes.item + \" personal\"}>\n                            <Typography>\n                                <i className={classes.title + \" fa fa-user\"}></i>\n                                {data.name} <i className={classes.title + \" fa fa-map-marker\"}></i>\n                                {data.location}{\" \"}\n                                <i className={classes.title + \" fa fa-birthday-cake\"}></i>\n                                {calculateAge(\"1998-01-20\")}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                        <Typography variant=\"h6\">Summary</Typography>\n                    </Box>\n                    <Typography className={classes.bio}>{data.bio}</Typography>\n                </div>\n            )}\n        </Box>\n    );\n};\n\nexport default Personal;\n","interface EducationItem {\n    university: string;\n    duration: string;\n    description: string;\n    location: string;\n    link: string;\n}\n\nconst education: EducationItem[] = [\n    {\n        university: \"National & Kapodistrian University of Athens\",\n        duration: \"Oct 2016 - Present\",\n        description:\n            \"B.Sc. in Computer Science - Specializations: Software, Data & Knowledge Management\",\n        location: \"Athens, Greece\",\n        link: \"https://www.di.uoa.gr/\",\n    },\n];\n\nexport { education };\n","import { FC } from \"react\";\nimport { education } from \"./config\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { Box, Link, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemName: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemLocation: {\n        marginRight: \"5px\",\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Education: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Education</Typography>\n            </Box>\n            {education.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n                            <Box display=\"flex\" flexDirection=\"row\">\n                                <Typography color=\"primary\" className={classes.itemName}>\n                                    {item.university}\n                                </Typography>\n                                <Typography\n                                    className={classes.itemLocation}\n                                >{` | ${item.location}`}</Typography>\n                                <Link href={item.link} target=\"_blank\" rel=\"noreferrer\">\n                                    <LinkIcon />\n                                </Link>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.duration}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Education;\n","interface ExperienceItem {\n    from: string;\n    to: string;\n    jobTitle: string;\n    company: string;\n    location: string;\n    description: string;\n    details: Array<string>;\n    link: string | null;\n}\n\nconst experience: ExperienceItem[] = [\n    {\n        from: \"Oct 2020\",\n        to: \"Present (Ends in April 2021)\",\n        jobTitle: \"Full Stack Developer\",\n        company: \"ITML\",\n        location: \"Athens, Greece\",\n        description:\n            \"I am building a subscription Web App for Doctors that will help them to automate their Visits, Referrals and Prescriptions for their Patients.\",\n        details: [\"Stack: React.js, Spring Boot, MySQL\", \"Security: JSON Web Tokens\"],\n        link: null,\n    },\n];\n\nexport { experience };\n","import { FC } from \"react\";\nimport { experience } from \"./config\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Experience: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Experience</Typography>\n            </Box>\n            {experience.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n                            <Box display=\"flex\" flexDirection=\"row\">\n                                <Typography\n                                    color=\"primary\"\n                                    className={classes.item}\n                                >{`${item.jobTitle} `}</Typography>\n                                <Typography>{` | ${item.company} - ${item.location}`}</Typography>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.from} - {item.to}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Experience;\n","import ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\ninterface ButtonItem {\n    text: string;\n    icon: any;\n    link: string;\n}\n\nconst buttons: ButtonItem[] = [\n    {\n        text: \"CV\",\n        icon: <ReceiptIcon />,\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\n    },\n    {\n        text: \"LinkedIn\",\n        icon: <LinkedInIcon />,\n        link: \"http://linkedin.com/in/alexiszamanidis\",\n    },\n    {\n        text: \"GitHub\",\n        icon: <GitHubIcon />,\n        link: \"https://github.com/alexiszamanidis\",\n    },\n];\n\nexport { buttons };\n","import { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    button: {\n        margin: \"5px 5px 5px 5px\",\n        color: \"white\",\n        outline: \"0px solid white\",\n        transition: \"outline-offset 250ms ease\",\n        borderRadius: \"0\",\n        \"&:hover, &:focus\": {\n            outline: \"2px solid white\",\n            outlineOffset: \"-5px\",\n            boxShadow: \"2px 2px gray\",\n        },\n    },\n});\n\ninterface CustomButtonLinkProps {\n    link: string;\n    size: \"small\" | \"medium\" | undefined;\n    icon: JSX.Element;\n    text: string;\n}\n\nconst CustomButtonLink: FC<CustomButtonLinkProps> = ({ link, size, icon, text }) => {\n    const classes = useStyles();\n\n    return (\n        <a data-test-id=\"custom-button-link-a\" href={link} target=\"_blank\" rel=\"noreferrer\">\n            <Button\n                data-test-id=\"custom-button-link-button\"\n                color=\"primary\"\n                variant=\"contained\"\n                size={size}\n                startIcon={icon}\n                className={classes.button}\n            >\n                {text}\n            </Button>\n        </a>\n    );\n};\n\nexport default CustomButtonLink;\n","import { FC } from \"react\";\nimport { buttons } from \"./config\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport CustomButtonLink from \"../../CustomButtonLink\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        textAlign: \"center\",\n    },\n}));\n\nconst ButtonLinks: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={3} className={classes.root}>\n            {buttons.map((button, index) => {\n                return (\n                    <CustomButtonLink\n                        key={index}\n                        link={button.link}\n                        size=\"medium\"\n                        icon={button.icon}\n                        text={button.text}\n                    />\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default ButtonLinks;\n","interface PassionateAboutItem {\n    name: string;\n}\n\nconst passionateAbout: PassionateAboutItem[] = [\n    {\n        name: \"Full Stack Development mainly with React.js, Spring Boot and MySQL\",\n    },\n    {\n        name: \"Machine Learning - Data Mining\",\n    },\n    {\n        name: \"Parallel Programming\",\n    },\n];\n\nexport { passionateAbout };\n","import { FC } from \"react\";\nimport { passionateAbout } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst PassionateAbout: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Passionate About</Typography>\n            </Box>\n            <List className={classes.list}>\n                {passionateAbout.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default PassionateAbout;\n","import { FC } from \"react\";\nimport Contact from \"./Contact\";\nimport Hobbies from \"./Hobbies\";\nimport Personal from \"./Personal\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport ButtonLinks from \"./ButtonLinks\";\nimport PassionateAbout from \"./PassionAbout\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"25px\",\n    },\n    paper: {\n        padding: theme.spacing(3),\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst AboutMe: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth=\"md\" className={classes.root}>\n            <Paper className={classes.paper}>\n                <Personal />\n                <Education />\n                <Experience />\n                <PassionateAbout />\n                <Hobbies />\n                <Contact />\n                <ButtonLinks />\n            </Paper>\n        </Container>\n    );\n};\n\nexport default AboutMe;\n","import { FC } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CustomButtonLink from \"../../../../CustomButtonLink\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n    },\n});\n\ninterface CardComponentProps {\n    name: string;\n    description: string;\n    language: string;\n    stargazers_count: number;\n    forks_count: number;\n    html_url: string;\n}\n\nconst CardComponent: FC<CardComponentProps> = ({\n    name,\n    description,\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n}) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root} style={{ height: \"100%\" }}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    {name}\n                </Typography>\n                <Typography>{description}</Typography>\n                <Typography>\n                    <b>language</b>: {language} <i className={\"fa fa-star\"}></i>\n                    {` ${stargazers_count} `}\n                    <i className=\"fa fa-code-fork\"></i>\n                    {` ${forks_count} `}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <CustomButtonLink\n                    link={html_url}\n                    size=\"small\"\n                    icon={<i style={{ marginRight: \"5px\" }} className={\"fa fa-github\"}></i>}\n                    text={\"View on GitHub\"}\n                />\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CardComponent;\n","import { Grid } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport CardComponent from \"./CardComponent\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    grid: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n});\n\ntype Repo = {\n    id: number;\n    name: string;\n    description: string;\n    language: string;\n    stargazers_count: number;\n    forks_count: number;\n    html_url: string;\n};\n\ntype RepoProps = {\n    repositories: Repo[];\n};\n\nconst Repositories: FC<RepoProps> = ({ repositories }) => {\n    const classes = useStyles();\n\n    return (\n        <Grid container spacing={3} className={classes.grid}>\n            {repositories.map((repo: Repo) => {\n                return (\n                    <Grid item xs={12} sm={4} md={4} key={repo.id}>\n                        <CardComponent\n                            name={repo.name}\n                            description={repo.description}\n                            language={repo.language}\n                            stargazers_count={repo.stargazers_count}\n                            forks_count={repo.forks_count}\n                            html_url={repo.html_url}\n                        />\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n};\n\nexport default Repositories;\n","import { useEffect, useState } from \"react\";\n\nfunction useDebounce(value: string, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;\n","import { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n    },\n});\n\nexport const useGitHubFaIconSpinner = (isLoading: boolean): JSX.Element => {\n    const classes = useStyles();\n\n    const gitHubFaIcon = useMemo(() => {\n        return (\n            <div className={`${classes.root} fa-3x`}>\n                <i className={\"fa fa-github\" + (isLoading === true ? \" fa-spin\" : \"\")}></i>\n            </div>\n        );\n    }, [isLoading, classes.root]);\n\n    return gitHubFaIcon;\n};\n","import { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Repositories from \"./Repositories\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useDebounce from \"../../CustomHooks/useDebounce\";\nimport GitHubService from \"../../../services/GitHub/GitHub\";\nimport { useGitHubFaIconSpinner } from \"./useGitHubFaIconSpinner\";\nimport { useFilteredData, useSearch, useUniqueLanguages } from \"./filterHooks\";\nimport { TextField, FormControl, InputLabel, Select, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"300px\",\n        margin: \"30px\",\n    },\n    searchFields: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            flexDirection: \"row\",\n        },\n    },\n    search: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"30%\",\n        },\n    },\n    select: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"30%\",\n        },\n    },\n});\n\nconst GitHub: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\"gitHubRepositories\", () =>\n        GitHubService.getUserRepositories(\"alexiszamanidis\").then(({ data }) => data)\n    );\n\n    const { search, handleSearch } = useSearch();\n    const debouncedSearch = useDebounce(search, 500);\n    const { selectedLanguage, handleLanguage, languages } = useUniqueLanguages(data);\n    const { computedData } = useFilteredData(data, debouncedSearch, selectedLanguage);\n\n    const gitHubFaIcon = useGitHubFaIconSpinner(isLoading);\n\n    return (\n        <div>\n            {isLoading ? (\n                gitHubFaIcon\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <div>\n                    {gitHubFaIcon}\n                    <div className={classes.searchFields}>\n                        <Tooltip title=\"Filter by Repository Name, Description\" placement=\"top\">\n                            <TextField\n                                label=\"Search\"\n                                variant=\"outlined\"\n                                className={classes.search}\n                                onChange={handleSearch}\n                                value={search}\n                            />\n                        </Tooltip>\n                        <FormControl variant=\"outlined\" className={classes.select}>\n                            <InputLabel>Language</InputLabel>\n                            <Select\n                                native\n                                label=\"Language\"\n                                value={selectedLanguage}\n                                onChange={handleLanguage}\n                            >\n                                <option value=\"\" />\n                                {languages.map((language, index) => {\n                                    return (\n                                        <option key={index} value={language}>\n                                            {language}\n                                        </option>\n                                    );\n                                })}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <Repositories repositories={computedData} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default GitHub;\n","import { useState, useMemo } from \"react\";\n\nexport const useSearch = () => {\n    const [search, setSearch] = useState(\"\");\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(e.target.value);\n    };\n    return { search, setSearch, handleSearch };\n};\n\ntype Repo = {\n    id: number;\n    name: string;\n    description: string;\n    language: string;\n    stargazers_count: number;\n    forks_count: number;\n    html_url: string;\n};\n\nexport const useUniqueLanguages = (data: Repo[]) => {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const handleLanguage = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setSelectedLanguage(e.target.value as string);\n    };\n\n    const languages = useMemo(() => {\n        if (data === undefined) return [];\n        let uniqueLanguages = new Set<string>(\n            data\n                .filter(\n                    ({ language }: { language: string | null }) =>\n                        language !== null && language !== \"\"\n                )\n                .map(({ language }: { language: string }) => language)\n        );\n        return Array.from(uniqueLanguages);\n    }, [data]);\n\n    return { selectedLanguage, setSelectedLanguage, handleLanguage, languages };\n};\n\nexport const useFilteredData = (\n    data: Repo[],\n    debouncedSearch: string,\n    selectedLanguage: string\n) => {\n    const computedData = useMemo(() => {\n        if (data === undefined) return [];\n        let tempRepositories = data;\n        if (debouncedSearch.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ name, description }: { name: string; description: string }) => {\n                    return (\n                        name.toString().toLowerCase().includes(debouncedSearch.toLowerCase()) ||\n                        description.toString().toLowerCase().includes(debouncedSearch.toLowerCase())\n                    );\n                }\n            );\n        }\n\n        if (selectedLanguage.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ language }: { language: string | null }) => {\n                    return language === selectedLanguage;\n                }\n            );\n        }\n\n        return tempRepositories;\n    }, [data, debouncedSearch, selectedLanguage]);\n\n    return { computedData };\n};\n","import { FC } from \"react\";\nimport GitHub from \"./GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Portfolio: FC = () => {\n    return (\n        <Container>\n            <GitHub />\n        </Container>\n    );\n};\n\nexport default Portfolio;\n","import { FC } from \"react\";\nimport { tabItems } from \"./config\";\nimport Footer from \"./Footer\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport GlobalStyles from \"../globalStyles\";\nimport theme from \"../theme\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { useTabs } from \"./useTabs\";\n\nconst queryClient = new QueryClient();\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n    },\n    main: {\n        paddingBottom: theme.spacing(3),\n    },\n    footer: {\n        marginTop: \"auto\",\n    },\n    tabs: {\n        color: \"white\",\n    },\n}));\n\nconst App: FC = () => {\n    const classes = useStyles();\n\n    const { value, setValue, showTabContent } = useTabs();\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <ThemeProvider theme={theme}>\n                <GlobalStyles />\n                <div className={classes.root}>\n                    <div className={classes.main}>\n                        <Box bgcolor=\"primary.main\">\n                            <Tabs\n                                value={value}\n                                onChange={(event, newValue) => setValue(newValue)}\n                                variant=\"fullWidth\"\n                                className={classes.tabs}\n                                TabIndicatorProps={{\n                                    style: {\n                                        height: \"5px\",\n                                    },\n                                }}\n                            >\n                                {tabItems.map((tabItem, index) => {\n                                    return <Tab key={index} {...tabItem} />;\n                                })}\n                            </Tabs>\n                        </Box>\n                        {showTabContent}\n                    </div>\n                    <div className={classes.footer}>\n                        <Footer />\n                    </div>\n                </div>\n            </ThemeProvider>\n        </QueryClientProvider>\n    );\n};\n\nexport default App;\n","import { useState, useMemo } from \"react\";\nimport AboutMe from \"./AboutMe\";\nimport Portfolio from \"./Portfolio\";\n\nexport const useTabs = () => {\n    const [value, setValue] = useState<number>(0);\n\n    const showTabContent: JSX.Element | null = useMemo(() => {\n        if (value === 0) return <AboutMe />;\n        else if (value === 1) return <Portfolio />;\n        else return null;\n    }, [value]);\n\n    return { value, setValue, showTabContent };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}