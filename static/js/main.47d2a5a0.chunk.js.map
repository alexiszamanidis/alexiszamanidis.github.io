{"version":3,"sources":["components/Tabs/config.tsx","components/AboutMe/Contact/config.tsx","components/AboutMe/Contact/index.tsx","components/AboutMe/Hobbies/config.tsx","components/AboutMe/Hobbies/index.tsx","utilities/index.tsx","components/AboutMe/Personal/PersonalSkeleton/index.tsx","services/config.tsx","services/GitHub/GitHub.tsx","components/AboutMe/Personal/index.tsx","components/AboutMe/Education/config.tsx","components/AboutMe/Education/index.tsx","components/AboutMe/Experience/config.tsx","components/AboutMe/Experience/index.tsx","components/AboutMe/ButtonLinks/config.tsx","components/CustomButtonLink/index.tsx","components/AboutMe/ButtonLinks/index.tsx","components/AboutMe/PassionAbout/config.tsx","components/AboutMe/PassionAbout/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/Repositories/CardSkeleton/index.tsx","components/Portfolio/GitHub/Repositories/CardComponent/index.tsx","components/Portfolio/GitHub/Repositories/index.tsx","components/Portfolio/GitHub/Repositories/config.tsx","components/CustomHooks/useDebounce.tsx","components/Portfolio/GitHub/useGitHubFaIconSpinner.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/GitHub/filterHooks.tsx","components/Portfolio/index.tsx","components/Tabs/index.tsx","components/Tabs/useTabs.tsx","components/Footer/index.tsx","components/Layout/index.tsx","pages/index.tsx","theme/index.tsx","globalStyles/index.tsx","providers/index.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","contacts","name","link","useStyles","makeStyles","theme","title","color","palette","text","primary","list","padding","item","Contact","classes","Box","mb","fontWeight","className","Typography","variant","List","map","index","ListItem","Link","href","target","rel","component","hobbies","Hobbies","calculateAge","dateOfBirth","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","avatar","margin","width","spacing","height","marginBottom","personal","textAlign","bio","skeletonItem","marginRight","PersonalSkeleton","Fragment","Skeleton","display","alignItems","justifyContent","getOptions","baseUrl","endPoint","parameters","url","URLSearchParams","toString","method","headers","Accept","basePath","this","username","axios","repository","Personal","useQuery","GitHub","getUserData","then","data","refetchOnMount","cacheTime","Infinity","isLoading","isError","Alert","severity","Avatar","alt","src","avatar_url","location","education","university","duration","description","itemName","itemDescription","itemLocation","itemDuration","itemLinkIcon","itemSlash","Education","useTheme","matches","useMediaQuery","breakpoints","up","flexDirection","experience","from","to","jobTitle","company","typeOfEmployee","Experience","buttons","button","CustomButtonLink","size","data-test-id","Button","startIcon","root","ButtonLinks","passionateAbout","PassionateAbout","marginTop","paper","secondary","AboutMe","Container","maxWidth","Paper","skeleton","CardSkeleton","timeout","Grow","in","Card","CardContent","gutterBottom","CardActions","style","marginLeft","CardComponent","language","stargazers_count","forks_count","html_url","grid","Repositories","repositories","loading","Grid","container","Array","skeletonIndex","xs","sm","md","repo","id","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchFields","search","select","error","GitHubService","getUserRepositories","setSearch","handleSearch","e","useSearch","debouncedSearch","selectedLanguage","setSelectedLanguage","languages","useMemo","undefined","uniqueLanguages","Set","filter","handleLanguage","useUniqueLanguages","computedData","tempRepositories","length","toLowerCase","includes","useFilteredData","gitHubFaIcon","useGitHubFaIconSpinner","Tooltip","placement","TextField","onChange","FormControl","InputLabel","Select","native","Portfolio","tabs","MyTabs","setValue","showTabContent","handleTabs","event","newValue","useTabs","bgcolor","Tabs","TabIndicatorProps","tabItem","Tab","a","fontSize","Copyright","Footer","minHeight","main","paddingBottom","footer","Layout","children","App","createMuiTheme","background","default","colors","common","white","typography","fontFamily","join","createStyles","boxSizing","html","body","backgroundColor","textDecoration","GlobalStyles","queryClient","QueryClient","Providers","QueryClientProvider","client","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47d2a5a0.chunk.js","sourcesContent":["import { TabItem } from \"./types\";\nimport { AccountBox, Work } from \"@material-ui/icons\";\n\nconst tabItems: TabItem[] = [\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\n    { label: \"PORTFOLIO\", icon: <Work /> },\n];\n\nexport { tabItems };\n","import { ContactItem } from \"./types\";\n\nconst contacts: ContactItem[] = [\n    {\n        icon: \"fa fa-phone\",\n        name: \"+30 698-044-3908\",\n        link: \"tel:+30698-044-3908\",\n    },\n    {\n        icon: \"fa fa-envelope\",\n        name: \"alexiszamanidis@outlook.com\",\n        link: \"mailto:alexiszamanidis@outlook.com\",\n    },\n];\n\nexport { contacts };\n","import { FC } from \"react\";\nimport { contacts } from \"./config\";\nimport { Box, Link, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n    link: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Contact: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Contact</Typography>\n            </Box>\n            <List className={classes.list}>\n                {contacts.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Link\n                                href={item.link}\n                                className={classes.link}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                <Typography component={\"span\"}>\n                                    <div className=\"contact\">\n                                        <i className={classes.title + \" \" + item.icon}></i>\n                                        {item.name}\n                                    </div>\n                                </Typography>\n                            </Link>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Contact;\n","import { HobbyItem } from \"./types\";\n\nconst hobbies: HobbyItem[] = [\n    {\n        name: \"Playing Football and Basketball\",\n    },\n    {\n        name: \"Calisthenics Workout\",\n    },\n];\n\nexport { hobbies };\n","import { FC } from \"react\";\nimport { hobbies } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Hobbies: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Hobbies</Typography>\n            </Box>\n            <List className={classes.list}>\n                {hobbies.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Hobbies;\n","export const trimString = (string: string | null, limit: number): string => {\n    return string !== null\n        ? string.length <= limit\n            ? string\n            : string.substring(0, limit) + \"...\"\n        : \"\";\n};\n\nexport const calculateAge = (dateOfBirth: string): number => {\n    let todayDate = new Date();\n    let todayDay = todayDate.getDate();\n    let todayMonth = todayDate.getMonth();\n    let todayYear = todayDate.getFullYear();\n\n    let birthDate = new Date(dateOfBirth);\n    let birthDay = birthDate.getDate();\n    let birthMonth = birthDate.getMonth();\n    let birthYear = birthDate.getFullYear();\n\n    let age = todayYear - birthYear;\n\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\n    else return age - 1;\n};\n\nexport const findByDataTestIdAttribute = (component: any, attribute: string) => {\n    const wrapper = component.find(`[data-test-id=\"${attribute}\"]`);\n    return wrapper;\n};\n","import React, { FC } from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: \"15px\",\n    },\n    personal: {\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        color: theme.palette.text.primary,\n    },\n    bio: {\n        color: theme.palette.text.primary,\n    },\n    skeletonItem: {\n        marginRight: \"2px\",\n    },\n}));\n\nconst PersonalSkeleton: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Skeleton className={classes.avatar} variant=\"circle\" width={250} height={250} />\n            <div className={classes.personal}>\n                <div className={classes.item + \" personal\"}>\n                    <Typography component={\"span\"} variant={\"body2\"}>\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                            <Skeleton\n                                className={classes.skeletonItem}\n                                variant=\"circle\"\n                                width={20}\n                                height={20}\n                            />\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                            <Skeleton\n                                className={classes.skeletonItem}\n                                variant=\"circle\"\n                                width={20}\n                                height={20}\n                            />\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                            <Skeleton\n                                className={classes.skeletonItem}\n                                variant=\"circle\"\n                                width={20}\n                                height={20}\n                            />\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                        </Box>\n                    </Typography>\n                </div>\n            </div>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">\n                    <Skeleton className={classes.skeletonItem} width={\"20%\"} />\n                    <Skeleton />\n                    <Skeleton />\n                    <Skeleton width={\"50%\"} />\n                </Typography>\n            </Box>\n            <Typography className={classes.bio}></Typography>\n        </React.Fragment>\n    );\n};\n\nexport default PersonalSkeleton;\n","export const getOptions = (baseUrl: string, endPoint: string, parameters?: any): object => {\n    return {\n        url: `${baseUrl}${endPoint}?` + new URLSearchParams(parameters).toString(),\n        method: \"GET\",\n        headers: {\n            Accept: \"application/vnd.github.v3+json\",\n        },\n    };\n};\n","import axios from \"axios\";\nimport { getOptions } from \"../config\";\n\n// const clientId = \"\";\n// const clientSecret = \"\";\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\n\nclass GitHubService {\n    basePath: string;\n\n    constructor() {\n        this.basePath = \"https://api.github.com\";\n    }\n\n    getUserData(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}`));\n    }\n\n    getUserRepositories(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/repos`));\n    }\n\n    getRepositoryTopics(username: string, repository: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/${repository}/topics`));\n    }\n}\n\nexport default new GitHubService();\n","import React, { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { calculateAge } from \"../../../utilities\";\nimport PersonalSkeleton from \"./PersonalSkeleton\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport GitHub from \"../../../services/GitHub/GitHub\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: \"15px\",\n    },\n    personal: {\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        color: theme.palette.text.primary,\n    },\n    bio: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Personal: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\n        \"gitHubUserData\",\n        () => GitHub.getUserData(\"alexiszamanidis\").then(({ data }) => data),\n        { refetchOnMount: false, cacheTime: Infinity }\n    );\n\n    return (\n        <Box mb={5}>\n            {isLoading ? (\n                <PersonalSkeleton />\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <React.Fragment>\n                    <Avatar\n                        alt=\"Alexis Zamanidis\"\n                        src={data.avatar_url}\n                        className={classes.avatar}\n                    />\n                    <div className={classes.personal}>\n                        <div className={classes.item + \" personal\"}>\n                            <Typography>\n                                <i className={classes.title + \" fa fa-user\"}></i>\n                                {data.name} <i className={classes.title + \" fa fa-map-marker\"}></i>\n                                {data.location}{\" \"}\n                                <i className={classes.title + \" fa fa-birthday-cake\"}></i>\n                                {calculateAge(\"1998-01-20\")}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                        <Typography variant=\"h6\">Summary</Typography>\n                    </Box>\n                    <Typography className={classes.bio}>{data.bio}</Typography>\n                </React.Fragment>\n            )}\n        </Box>\n    );\n};\n\nexport default Personal;\n","import { EducationItem } from \"./types\";\n\nconst education: EducationItem[] = [\n    {\n        university: \"National & Kapodistrian University of Athens\",\n        duration: \"Oct 2016 - Feb 2021\",\n        description:\n            \"B.Sc. in Computer Science - Specializations: Software, Data & Knowledge Management.\",\n        location: \"Athens, Greece\",\n        link: \"https://www.di.uoa.gr/\",\n    },\n];\n\nexport { education };\n","import { FC } from \"react\";\nimport { education } from \"./config\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box, Link, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemName: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemLocation: {\n        marginRight: \"5px\",\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n    itemLinkIcon: {\n        color: \"black\",\n    },\n    itemSlash: {\n        display: \"none\",\n        // eslint-disable-next-line\n        [\"@media (min-width:960px)\"]: {\n            display: \"block\",\n            marginRight: \"5px\",\n        },\n    },\n}));\n\nconst Education: FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Education</Typography>\n            </Box>\n            {education.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box\n                            display=\"flex\"\n                            flexDirection={matches ? \"row\" : \"column\"}\n                            justifyContent=\"space-between\"\n                        >\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\n                                <Typography color=\"primary\" className={classes.itemName}>\n                                    {item.university}\n                                </Typography>\n                                <Box display=\"flex\" flexDirection=\"row\">\n                                    <Typography className={classes.itemSlash}>{\" | \"}</Typography>\n                                    <Typography className={classes.itemLocation}>\n                                        {item.location}\n                                    </Typography>\n                                    <Link href={item.link} target=\"_blank\" rel=\"noreferrer\">\n                                        <LinkIcon className={classes.itemLinkIcon} />\n                                    </Link>\n                                </Box>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.duration}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Education;\n","import { ExperienceItem } from \"./types\";\n\nconst experience: ExperienceItem[] = [\n    {\n        from: \"Oct 2020\",\n        to: \"April 2021\",\n        jobTitle: \"Full Stack Developer, Intern\",\n        company: \"ITML\",\n        location: \"Athens, Greece\",\n        typeOfEmployee: \"Remote Full-Time\",\n        description:\n            \"I built a Web Application which will be used by Doctors in their daily life  with main functionalities of automating Visits, Prescriptions and Referrals. \" +\n            \"But also it has other very useful functionalities such as Calendar, Pdf Generator for handwritten Prescriptions, Medicines Statistics. \" +\n            \"Its basic functionality is based on the API provided by IDIKA which is the official provider of e-Prescription in Greece.\",\n        link: null,\n    },\n];\n\nexport { experience };\n","import { FC } from \"react\";\nimport { experience } from \"./config\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n    itemSlash: {\n        display: \"none\",\n        // eslint-disable-next-line\n        [\"@media (min-width:960px)\"]: {\n            display: \"block\",\n            marginRight: \"5px\",\n        },\n    },\n}));\n\nconst Experience: FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Experience</Typography>\n            </Box>\n            {experience.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box\n                            display=\"flex\"\n                            flexDirection={matches ? \"row\" : \"column\"}\n                            justifyContent=\"space-between\"\n                        >\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\n                                <Typography\n                                    color=\"primary\"\n                                    className={classes.item}\n                                >{`${item.jobTitle} `}</Typography>\n                                <Typography className={classes.itemSlash}>{\" | \"}</Typography>\n                                <Typography>{`${item.company} - ${item.location} (${item.typeOfEmployee})`}</Typography>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.from} - {item.to}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Experience;\n","import { ButtonItem } from \"./types\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst buttons: ButtonItem[] = [\n    {\n        text: \"CV\",\n        icon: <ReceiptIcon />,\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\n    },\n    {\n        text: \"LinkedIn\",\n        icon: <LinkedInIcon />,\n        link: \"http://linkedin.com/in/alexiszamanidis\",\n    },\n    {\n        text: \"GitHub\",\n        icon: <GitHubIcon />,\n        link: \"https://github.com/alexiszamanidis\",\n    },\n];\n\nexport { buttons };\n","import { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { CustomButtonLinkProps } from \"./types\";\n\nconst useStyles = makeStyles({\n    button: {\n        margin: \"5px 5px 5px 5px\",\n    },\n});\n\nconst CustomButtonLink: FC<CustomButtonLinkProps> = ({ link, size, icon, text }) => {\n    const classes = useStyles();\n\n    return (\n        <a data-test-id=\"custom-button-link-a\" href={link} target=\"_blank\" rel=\"noreferrer\">\n            <Button\n                data-test-id=\"custom-button-link-button\"\n                color=\"primary\"\n                variant=\"contained\"\n                size={size}\n                startIcon={icon}\n                className={classes.button}\n            >\n                {text}\n            </Button>\n        </a>\n    );\n};\n\nexport default CustomButtonLink;\n","import { FC } from \"react\";\nimport { buttons } from \"./config\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport CustomButtonLink from \"../../CustomButtonLink\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n    },\n});\n\nconst ButtonLinks: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={3} className={classes.root}>\n            {buttons.map((button, index) => {\n                return (\n                    <CustomButtonLink\n                        key={index}\n                        link={button.link}\n                        size=\"medium\"\n                        icon={button.icon}\n                        text={button.text}\n                    />\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default ButtonLinks;\n","import { PassionateAboutItem } from \"./types\";\n\nconst passionateAbout: PassionateAboutItem[] = [\n    {\n        name: \"Full Stack Development mainly with React.js, Spring Boot and MySQL\",\n    },\n    {\n        name: \"Machine Learning - Data Mining\",\n    },\n    {\n        name: \"Parallel Programming\",\n    },\n];\n\nexport { passionateAbout };\n","import { FC } from \"react\";\nimport { passionateAbout } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst PassionateAbout: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Passionate About</Typography>\n            </Box>\n            <List className={classes.list}>\n                {passionateAbout.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default PassionateAbout;\n","import { FC } from \"react\";\nimport Contact from \"./Contact\";\nimport Hobbies from \"./Hobbies\";\nimport Personal from \"./Personal\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport ButtonLinks from \"./ButtonLinks\";\nimport PassionateAbout from \"./PassionAbout\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"25px\",\n    },\n    paper: {\n        padding: theme.spacing(3),\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst AboutMe: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Container data-test-id=\"about-me\" maxWidth=\"md\" className={classes.root}>\n            <Paper className={classes.paper}>\n                <Personal data-test-id=\"personal\" />\n                <Education data-test-id=\"education\" />\n                <Experience data-test-id=\"experience\" />\n                <PassionateAbout data-test-id=\"passionate-about\" />\n                <Hobbies data-test-id=\"hobbies\" />\n                <Contact data-test-id=\"contact\" />\n                <ButtonLinks data-test-id=\"button-links\" />\n            </Paper>\n        </Container>\n    );\n};\n\nexport default AboutMe;\n","import React, { FC } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { CardSkeletonProps } from \"./types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles({\n    skeleton: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n    },\n    skeletonItem: {\n        marginRight: \"2px\",\n    },\n});\n\nconst CardSkeleton: FC<CardSkeletonProps> = ({ timeout }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Grow in={true} timeout={timeout}>\n                <Card className={classes.skeleton}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            <Skeleton width={\"70%\"} />\n                        </Typography>\n                        <Typography component={\"span\"} variant={\"body2\"}>\n                            <Skeleton />\n                            <Skeleton />\n                            <Skeleton />\n                            <Skeleton />\n                        </Typography>\n                        <Typography component={\"span\"} variant={\"body2\"}>\n                            <Box display=\"flex\" alignItems=\"center\">\n                                <Skeleton className={classes.skeletonItem} width={\"40%\"} />\n                                <Skeleton\n                                    className={classes.skeletonItem}\n                                    variant=\"circle\"\n                                    width={20}\n                                    height={20}\n                                />\n                                <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                                <Skeleton\n                                    className={classes.skeletonItem}\n                                    variant=\"circle\"\n                                    width={20}\n                                    height={20}\n                                />\n                                <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                            </Box>\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Skeleton width={\"70%\"} height={40} style={{ marginLeft: \"5px\" }} />\n                    </CardActions>\n                </Card>\n            </Grow>\n        </React.Fragment>\n    );\n};\n\nexport default CardSkeleton;\n","import { FC } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardComponentProps } from \"./types\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CustomButtonLink from \"../../../../CustomButtonLink\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n    },\n});\n\nconst CardComponent: FC<CardComponentProps> = ({\n    name,\n    description,\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n}) => {\n    const classes = useStyles();\n    return (\n        <Card data-test-id=\"card-component\" className={classes.root}>\n            <CardContent>\n                <Typography data-test-id=\"card-component-name\" color=\"textSecondary\" gutterBottom>\n                    <Box fontWeight={500}>{name}</Box>\n                </Typography>\n                <Typography data-test-id=\"card-component-description\">{description}</Typography>\n                <Typography data-test-id=\"card-component-language-star-fork\">\n                    <b>language</b>: {language} <i className={\"fa fa-star\"}></i>\n                    {` ${stargazers_count} `}\n                    <i className=\"fa fa-code-fork\"></i>\n                    {` ${forks_count} `}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <CustomButtonLink\n                    data-test-id=\"card-component-custom-button-link\"\n                    link={html_url}\n                    size=\"small\"\n                    icon={<i style={{ marginRight: \"5px\" }} className={\"fa fa-github\"}></i>}\n                    text={\"View on GitHub\"}\n                />\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CardComponent;\n","import { FC } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CardSkeleton from \"./CardSkeleton\";\nimport { Repo, RepoProps } from \"./types\";\nimport CardComponent from \"./CardComponent\";\nimport { numberOfSkeletons } from \"./config\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    grid: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n});\n\nconst Repositories: FC<RepoProps> = ({ repositories, loading }) => {\n    const classes = useStyles();\n\n    return (\n        <Grid data-test-id=\"repositories\" container spacing={3} className={classes.grid}>\n            {loading\n                ? [...Array(numberOfSkeletons)].map((skeleton, skeletonIndex) => {\n                      return (\n                          <Grid item xs={12} sm={4} md={4} key={skeletonIndex}>\n                              <CardSkeleton timeout={skeletonIndex * 500} />\n                          </Grid>\n                      );\n                  })\n                : repositories.map((repo: Repo) => {\n                      return (\n                          <Grid data-test-id=\"repository\" item xs={12} sm={4} md={4} key={repo.id}>\n                              <CardComponent\n                                  data-test-id=\"repository-card-component\"\n                                  name={repo.name}\n                                  description={repo.description}\n                                  language={repo.language}\n                                  stargazers_count={repo.stargazers_count}\n                                  forks_count={repo.forks_count}\n                                  html_url={repo.html_url}\n                              />\n                          </Grid>\n                      );\n                  })}\n        </Grid>\n    );\n};\n\nexport default Repositories;\n","export const numberOfSkeletons: number = 4;\n","import { useEffect, useState } from \"react\";\n\nfunction useDebounce(value: string, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;\n","import { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n    },\n});\n\nexport const useGitHubFaIconSpinner = (isLoading: boolean): JSX.Element => {\n    const classes = useStyles();\n\n    const gitHubFaIcon = useMemo(() => {\n        return (\n            <div className={`${classes.root} fa-3x`}>\n                <i className={\"fa fa-github\" + (isLoading === true ? \" fa-spin\" : \"\")}></i>\n            </div>\n        );\n    }, [isLoading, classes.root]);\n\n    return gitHubFaIcon;\n};\n","import React, { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Repositories from \"./Repositories\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useDebounce from \"../../CustomHooks/useDebounce\";\nimport GitHubService from \"../../../services/GitHub/GitHub\";\nimport { useGitHubFaIconSpinner } from \"./useGitHubFaIconSpinner\";\nimport { useFilteredData, useSearch, useUniqueLanguages } from \"./filterHooks\";\nimport { TextField, FormControl, InputLabel, Select, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"300px\",\n        margin: \"30px\",\n    },\n    searchFields: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            flexDirection: \"row\",\n        },\n    },\n    search: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"30%\",\n        },\n    },\n    select: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"30%\",\n        },\n    },\n    error: {\n        marginTop: \"10px\",\n    },\n});\n\nconst GitHub: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\n        \"gitHubRepositories\",\n        () => GitHubService.getUserRepositories(\"alexiszamanidis\").then(({ data }) => data),\n        { refetchOnMount: false, cacheTime: Infinity }\n    );\n\n    const { search, handleSearch } = useSearch();\n    const debouncedSearch = useDebounce(search, 500);\n    const { selectedLanguage, handleLanguage, languages } = useUniqueLanguages(data);\n    const { computedData } = useFilteredData(data, debouncedSearch, selectedLanguage);\n\n    const gitHubFaIcon = useGitHubFaIconSpinner(isLoading);\n\n    return (\n        <React.Fragment>\n            {gitHubFaIcon}\n            <div className={classes.searchFields}>\n                <Tooltip\n                    data-test-id=\"tooltip-search-text-field\"\n                    title=\"filter by repository name and description\"\n                    placement=\"top\"\n                >\n                    <TextField\n                        data-test-id=\"search-text-field\"\n                        label=\"Search\"\n                        variant=\"outlined\"\n                        className={classes.search}\n                        onChange={handleSearch}\n                        value={search}\n                    />\n                </Tooltip>\n                <FormControl\n                    data-test-id=\"select-form-control\"\n                    variant=\"outlined\"\n                    className={classes.select}\n                >\n                    <InputLabel data-test-id=\"select-input-label\">Language</InputLabel>\n                    <Select\n                        data-test-id=\"select\"\n                        native\n                        label=\"Language\"\n                        value={selectedLanguage}\n                        onChange={handleLanguage}\n                    >\n                        <option value=\"\" />\n                        {languages.map((language, index) => {\n                            return (\n                                <option key={index} value={language}>\n                                    {language}\n                                </option>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            </div>\n            {isError ? (\n                <Alert className={classes.error} severity=\"error\">\n                    Something happened\n                </Alert>\n            ) : (\n                <Repositories\n                    data-test-id=\"repositories\"\n                    repositories={computedData}\n                    loading={isLoading}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default GitHub;\n","import { Repo } from \"./types\";\nimport { useState, useMemo } from \"react\";\n\nexport const useSearch = () => {\n    const [search, setSearch] = useState(\"\");\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(e.target.value);\n    };\n    return { search, setSearch, handleSearch };\n};\n\nexport const useUniqueLanguages = (data: Repo[]) => {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const handleLanguage = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setSelectedLanguage(e.target.value as string);\n    };\n\n    const languages = useMemo(() => {\n        if (data === undefined) return [];\n        let uniqueLanguages = new Set<string>(\n            data\n                .filter(\n                    ({ language }: { language: string | null }) =>\n                        language !== null && language !== \"\"\n                )\n                .map(({ language }: { language: string }) => language)\n        );\n        return Array.from(uniqueLanguages);\n    }, [data]);\n\n    return { selectedLanguage, setSelectedLanguage, handleLanguage, languages };\n};\n\nexport const useFilteredData = (\n    data: Repo[],\n    debouncedSearch: string,\n    selectedLanguage: string\n) => {\n    const computedData = useMemo(() => {\n        if (data === undefined) return [];\n        let tempRepositories = data;\n        if (debouncedSearch.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ name, description }: { name: string; description: string }) => {\n                    return (\n                        name.toString().toLowerCase().includes(debouncedSearch.toLowerCase()) ||\n                        description.toString().toLowerCase().includes(debouncedSearch.toLowerCase())\n                    );\n                }\n            );\n        }\n\n        if (selectedLanguage.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ language }: { language: string | null }) => {\n                    return language === selectedLanguage;\n                }\n            );\n        }\n\n        return tempRepositories;\n    }, [data, debouncedSearch, selectedLanguage]);\n\n    return { computedData };\n};\n","import { FC } from \"react\";\nimport GitHub from \"./GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Portfolio: FC = () => {\n    return (\n        <Container data-test-id=\"card-portfolio\">\n            <GitHub data-test-id=\"github\" />\n        </Container>\n    );\n};\n\nexport default Portfolio;\n","import React, { FC } from \"react\";\nimport { tabItems } from \"./config\";\nimport { useTabs } from \"./useTabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    tabs: {\n        color: \"white\",\n    },\n});\n\nconst MyTabs: FC = () => {\n    const classes = useStyles();\n\n    const { value, handleTabs, showTabContent } = useTabs();\n\n    return (\n        <React.Fragment>\n            <Box data-test-id=\"tabs\" bgcolor=\"primary.main\">\n                <Tabs\n                    value={value}\n                    onChange={handleTabs}\n                    variant=\"fullWidth\"\n                    className={classes.tabs}\n                    TabIndicatorProps={{\n                        style: {\n                            height: \"5px\",\n                        },\n                    }}\n                >\n                    {tabItems.map((tabItem, index) => {\n                        return <Tab key={index} {...tabItem} />;\n                    })}\n                </Tabs>\n            </Box>\n            {showTabContent}\n        </React.Fragment>\n    );\n};\n\nexport default MyTabs;\n","import AboutMe from \"../AboutMe\";\nimport Portfolio from \"../Portfolio\";\nimport { useState, useMemo } from \"react\";\n\nexport const useTabs = () => {\n    const [value, setValue] = useState<number>(0);\n\n    const showTabContent: JSX.Element | null = useMemo(() => {\n        if (value === 0) return <AboutMe />;\n        else if (value === 1) return <Portfolio />;\n        else return null;\n    }, [value]);\n\n    const handleTabs = (event: any, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return { value, setValue, handleTabs, showTabContent };\n};\n","import { FC } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 1),\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    a: {\n        color: \"white\",\n        fontSize: \"15px\",\n    },\n}));\n\nexport const Copyright: FC = () => {\n    const classes = useStyles();\n    return (\n        <h5 data-test-id=\"copyright\" className=\"copyright\">\n            © {new Date().getFullYear()} Copyright:\n            <a\n                className=\"underline\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/alexiszamanidis\"\n                target=\"_blank\"\n            >\n                <b className={classes.a} data-test-id=\"copyright-name\">\n                    {\" Alexis Zamanidis\"}\n                </b>\n            </a>\n        </h5>\n    );\n};\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n    return (\n        <Box data-test-id=\"footer\" className={classes.root} bgcolor=\"primary.main\">\n            <Copyright data-test-id=\"copyright-inside-footer\" />\n        </Box>\n    );\n};\n\nexport default Footer;\n","import { makeStyles } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport Footer from \"../Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n    },\n    main: {\n        paddingBottom: theme.spacing(3),\n    },\n    footer: {\n        marginTop: \"auto\",\n    },\n    tabs: {\n        color: \"white\",\n    },\n}));\n\nconst Layout: FC = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <div data-test-id=\"layout\" className={classes.root}>\n            <div data-test-id=\"children\" className={classes.main}>\n                {children}\n            </div>\n            <div data-test-id=\"footer\" className={classes.footer}>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;\n","import { FC } from \"react\";\nimport MyTabs from \"../components/Tabs\";\nimport Layout from \"../components/Layout\";\n\nconst App: FC = () => {\n    return (\n        <Layout data-test-id=\"layout\">\n            <MyTabs data-test-id=\"tabs\" />\n        </Layout>\n    );\n};\n\nexport default App;\n","import { createMuiTheme, colors } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: colors.common.white,\n            paper: colors.common.white,\n        },\n        primary: {\n            main: \"#3F51B5\",\n        },\n        secondary: {\n            main: \"#fff\",\n        },\n    },\n    typography: {\n        fontFamily: [\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n    },\n});\n\nexport default theme;\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        \"@global\": {\n            \"*\": {\n                boxSizing: \"border-box\",\n            },\n            html: {\n                height: \"100%\",\n                width: \"100%\",\n            },\n            body: {\n                backgroundColor: \"#f4f6f8\",\n                height: \"100%\",\n                width: \"100%\",\n            },\n            a: {\n                textDecoration: \"none\",\n            },\n        },\n    })\n);\n\nconst GlobalStyles = () => {\n    useStyles();\n\n    return null;\n};\n\nexport default GlobalStyles;\n","import { FC } from \"react\";\nimport theme from \"../theme\";\nimport { ProviderPros } from \"./types\";\nimport GlobalStyles from \"../globalStyles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nconst Providers: FC<ProviderPros> = ({ children }) => {\n    return (\n        <QueryClientProvider client={queryClient}>\n            <ThemeProvider theme={theme}>\n                <GlobalStyles />\n                {children}\n            </ThemeProvider>\n        </QueryClientProvider>\n    );\n};\n\nexport default Providers;\n","import \"./index.css\";\nimport App from \"./pages\";\nimport ReactDOM from \"react-dom\";\nimport Providers from \"./providers\";\n\nReactDOM.render(\n    <Providers>\n        <App />\n    </Providers>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}