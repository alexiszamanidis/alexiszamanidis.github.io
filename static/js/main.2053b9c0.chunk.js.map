{"version":3,"sources":["components/config.tsx","utilities/index.tsx","services/config.tsx","services/GitHub/GitHub.tsx","components/AboutMe/LeftPaper/index.tsx","components/AboutMe/RightPaper/config.tsx","components/AboutMe/RightPaper/index.tsx","components/AboutMe/Experience/config.tsx","components/AboutMe/Experience/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/CardComponent/index.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/index.tsx","components/Footer/index.tsx","globalStyles/index.tsx","theme/index.tsx","components/index.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","calculateAge","dateOfBirth","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","getOptions","baseUrl","endPoint","parameters","url","URLSearchParams","toString","method","headers","Accept","basePath","this","username","axios","repository","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","height","avatar","margin","width","title","primary","item","LeftPaper","classes","useQuery","GitHub","getUserData","then","data","isLoading","isError","Grid","xs","sm","Paper","className","CircularProgress","Alert","severity","Avatar","alt","src","avatar_url","name","location","bio","passionateAbout","hobbies","contacts","link","buttons","button","outline","transition","borderRadius","outlineOffset","RightPaper","map","index","contact","href","target","rel","Button","variant","startIcon","experience","from","to","jobTitle","company","description","details","Experience","Box","mt","display","flexDirection","alignItems","Typography","gutterBottom","Timeline","align","exp","expIndex","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","length","TimelineConnector","TimelineContent","p","detail","detailIndex","size","style","marginRight","AboutMe","Container","container","root","justifyContent","CardComponent","language","stargazers_count","forks_count","html_url","Card","CardContent","CardActions","grid","marginTop","marginBottom","GitHubService","getUserRepositories","gitHubFaIcon","repo","md","id","Portfolio","backgroundColor","a","fontSize","Copyright","Footer","createStyles","boxSizing","html","body","textDecoration","GlobalStyles","createMuiTheme","background","default","colors","common","white","main","queryClient","QueryClient","minHeight","footer","tabs","App","useState","value","setValue","QueryClientProvider","client","ThemeProvider","Tabs","onChange","event","newValue","tabItem","Tab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2053b9c0.chunk.js","sourcesContent":["import { AccountBox, Work } from \"@material-ui/icons\";\n\ninterface TabItem {\n    label: string;\n    icon: JSX.Element;\n}\n\nconst tabItems: TabItem[] = [\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\n    { label: \"PORTFOLIO\", icon: <Work /> },\n];\n\nexport { tabItems };\n","export const trimString = (string: string | null, limit: number): string => {\n    return string !== null\n        ? string.length <= limit\n            ? string\n            : string.substring(0, limit) + \"...\"\n        : \"\";\n};\n\nexport const calculateAge = (dateOfBirth: string): number => {\n    let todayDate = new Date();\n    let todayDay = todayDate.getDate();\n    let todayMonth = todayDate.getMonth();\n    let todayYear = todayDate.getFullYear();\n\n    let birthDate = new Date(dateOfBirth);\n    let birthDay = birthDate.getDate();\n    let birthMonth = birthDate.getMonth();\n    let birthYear = birthDate.getFullYear();\n\n    let age = todayYear - birthYear;\n\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\n    else return age - 1;\n};\n","export const getOptions = (baseUrl: string, endPoint: string, parameters?: any): object => {\n    return {\n        url: `${baseUrl}${endPoint}?` + new URLSearchParams(parameters).toString(),\n        method: \"GET\",\n        headers: {\n            Accept: \"application/vnd.github.v3+json\",\n        },\n    };\n};\n","import axios from \"axios\";\nimport { getOptions } from \"../config\";\n\n// const clientId = \"\";\n// const clientSecret = \"\";\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\n\nclass GitHubService {\n    basePath: string;\n\n    constructor() {\n        this.basePath = \"https://api.github.com\";\n    }\n\n    getUserData(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}`));\n    }\n\n    getUserRepositories(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/repos`));\n    }\n\n    getRepositoryTopics(username: string, repository: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/${repository}/topics`));\n    }\n}\n\nexport default new GitHubService();\n","import React, { FC } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { calculateAge } from \"../../../utilities\";\nimport GitHub from \"../../../services/GitHub/GitHub\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useQuery } from \"react-query\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        margin: \"15px\",\n    },\n}));\n\nconst LeftPaper: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\"userData\", () =>\n        GitHub.getUserData(\"alexiszamanidis\").then(({ data }) => data)\n    );\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n                {isLoading ? (\n                    <CircularProgress />\n                ) : isError ? (\n                    <Alert severity=\"error\">Something happened</Alert>\n                ) : (\n                    <div>\n                        <Avatar\n                            alt=\"Alexis Zamanidis\"\n                            src={data.avatar_url}\n                            className={classes.avatar}\n                        />\n                        <div className={classes.item + \" personal\"}>\n                            <i className={classes.title + \" fa fa-user\"}></i>\n                            {data.name} <i className={classes.title + \" fa fa-map-marker\"}></i>\n                            {data.location}{\" \"}\n                            <i className={classes.title + \" fa fa-birthday-cake\"}></i>\n                            {calculateAge(\"1998-01-20\")}\n                        </div>\n                        <div className={classes.item}>\n                            <b className={classes.title}>Summary</b> <br />\n                            {data.bio}\n                        </div>\n                    </div>\n                )}\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default LeftPaper;\n","import ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\ninterface PassionateAboutItem {\n    name: string;\n}\n\nconst passionateAbout: PassionateAboutItem[] = [\n    {\n        name: \"Full Stack Development mainly with React.js, Spring Boot and MySQL\",\n    },\n    {\n        name: \"Machine Learning - Data Mining\",\n    },\n    {\n        name: \"Parallel Programming\",\n    },\n];\n\ninterface HobbyItem {\n    name: string;\n}\n\nconst hobbies: HobbyItem[] = [\n    {\n        name: \"Playing Football and Basketball\",\n    },\n    {\n        name: \"Calisthenics Workout\",\n    },\n];\n\ninterface ContactItem {\n    icon: string;\n    name: string;\n    link: string;\n}\n\nconst contacts: ContactItem[] = [\n    {\n        icon: \"fa fa-phone\",\n        name: \"+30 698-044-3908\",\n        link: \"tel:+30698-044-3908\",\n    },\n    {\n        icon: \"fa fa-envelope\",\n        name: \"alexiszamanidis@outlook.com\",\n        link: \"mailto:alexiszamanidis@outlook.com\",\n    },\n];\n\ninterface ButtonItem {\n    text: string;\n    icon: any;\n    link: string;\n}\n\nconst buttons: ButtonItem[] = [\n    {\n        text: \"CV\",\n        icon: <ReceiptIcon />,\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\n    },\n    {\n        text: \"LinkedIn\",\n        icon: <LinkedInIcon />,\n        link: \"http://linkedin.com/in/alexiszamanidis\",\n    },\n    {\n        text: \"GitHub\",\n        icon: <GitHubIcon />,\n        link: \"https://github.com/alexiszamanidis\",\n    },\n];\n\nexport { passionateAbout, hobbies, contacts, buttons };\n","import { FC } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { passionateAbout, hobbies, contacts, buttons } from \"./config\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        margin: \"15px\",\n    },\n    button: {\n        margin: \"5px 5px 5px 5px\",\n        color: \"white\",\n        outline: \"0px solid white\",\n        transition: \"outline-offset 250ms ease\",\n        borderRadius: \"0\",\n        \"&:hover, &:focus\": {\n            outline: \"2px solid white\",\n            outlineOffset: \"-5px\",\n        },\n    },\n}));\n\nconst RightPaper: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n                <div className={classes.item}>\n                    <b className={classes.title}>Passionate about</b>\n                    {passionateAbout.map((item, index) => {\n                        return (\n                            <div key={index}>\n                                {item.name} <br />\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={classes.item}>\n                    <b className={classes.title}>Hobbies</b>\n                    {hobbies.map((item, index) => {\n                        return (\n                            <div key={index}>\n                                {item.name} <br />\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={classes.item}>\n                    <b className={classes.title}>Contact</b>\n                    {contacts.map((contact, index) => {\n                        return (\n                            <a\n                                key={index}\n                                href={contact.link}\n                                className=\"underline\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                <div className=\"contact\">\n                                    <i className={classes.title + \" \" + contact.icon}></i>\n                                    {contact.name}\n                                </div>\n                            </a>\n                        );\n                    })}\n                </div>\n                <div className={classes.item}>\n                    {buttons.map((button, index) => {\n                        return (\n                            <a key={index} href={button.link} target=\"_blank\" rel=\"noreferrer\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    startIcon={button.icon}\n                                >\n                                    {button.text}\n                                </Button>\n                            </a>\n                        );\n                    })}\n                </div>\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default RightPaper;\n","interface ExperienceItem {\n    from: string;\n    to: string;\n    jobTitle: string;\n    company: string;\n    location: string;\n    description: string;\n    details: Array<string>;\n    link: string | null;\n}\n\nconst experience: ExperienceItem[] = [\n    {\n        from: \"Oct 2020\",\n        to: \"Present (Ends in April 2021)\",\n        jobTitle: \"Full Stack Developer\",\n        company: \"ITML\",\n        location: \"Athens, Greece\",\n        description:\n            \"I am building a subscription Web App for Doctors that will help them to automate their Visits, Referrals and Prescriptions for their Patients.\",\n        details: [\"Stack: React.js, Spring Boot, MySQL\", \"Security: JSON Web Tokens\"],\n        link: null,\n    },\n];\n\nexport { experience };\n","import { FC } from \"react\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Work from \"@material-ui/icons/Work\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { experience } from \"./config\";\nimport { Box, Button } from \"@material-ui/core\";\n\nconst Experience: FC = () => {\n    return (\n        <Box mt={3} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Typography variant=\"h4\" gutterBottom>\n                EXPERIENCE\n            </Typography>\n            <Timeline align=\"left\">\n                {experience.map((exp, expIndex) => {\n                    return (\n                        <TimelineItem key={expIndex}>\n                            <TimelineOppositeContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {`${exp.from} - ${exp.to}`}\n                                </Typography>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineDot>\n                                    <Work />\n                                </TimelineDot>\n                                {expIndex + 1 !== experience.length && <TimelineConnector />}\n                            </TimelineSeparator>\n                            <TimelineContent>\n                                <Paper>\n                                    <Box p={2}>\n                                        <Typography variant=\"h6\">{exp.jobTitle}</Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\">\n                                            {`${exp.company} - ${exp.location}`}\n                                        </Typography>\n                                        <Typography>{exp.description}</Typography>\n                                        <ul>\n                                            {exp.details.map((detail, detailIndex) => {\n                                                return <li key={detailIndex}>{detail}</li>;\n                                            })}\n                                        </ul>\n                                        {exp.link && (\n                                            <Box mt={1}>\n                                                <a href={exp.link} target=\"_blank\" rel=\"noreferrer\">\n                                                    <Button size=\"small\">\n                                                        <i\n                                                            style={{ marginRight: \"5px\" }}\n                                                            className={\"fa fa-link\"}\n                                                        ></i>\n                                                        Check out\n                                                    </Button>\n                                                </a>\n                                            </Box>\n                                        )}\n                                    </Box>\n                                </Paper>\n                            </TimelineContent>\n                        </TimelineItem>\n                    );\n                })}\n            </Timeline>\n        </Box>\n    );\n};\n\nexport default Experience;\n","import { FC } from \"react\";\nimport LeftPaper from \"./LeftPaper\";\nimport RightPaper from \"./RightPaper\";\nimport Experience from \"./Experience\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\n\nconst AboutMe: FC = () => {\n    return (\n        <Box mt={3}>\n            <Container>\n                <Grid container spacing={3}>\n                    <LeftPaper />\n                    <RightPaper />\n                </Grid>\n                <Experience />\n            </Container>\n        </Box>\n    );\n};\n\nexport default AboutMe;\n","import Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n    },\n    button: {\n        margin: \"5px 5px 5px 5px\",\n        color: \"white\",\n        outline: \"0px solid white\",\n        transition: \"outline-offset 250ms ease\",\n        borderRadius: \"0\",\n        \"&:hover, &:focus\": {\n            outline: \"2px solid white\",\n            outlineOffset: \"-5px\",\n        },\n    },\n});\n\nfunction CardComponent({\n    name,\n    description,\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n}: {\n    name: string;\n    description: string;\n    language: string;\n    stargazers_count: number;\n    forks_count: number;\n    html_url: string;\n}) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root} style={{ height: \"100%\" }}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    {name}\n                </Typography>\n                <Typography>{description}</Typography>\n                <Typography>\n                    <b>language</b>: {language} <i className={\"fa fa-star\"}></i>\n                    {` ${stargazers_count} `}\n                    <i className=\"fa fa-code-fork\"></i>\n                    {` ${forks_count} `}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n                    <Button\n                        className={classes.button}\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        <i style={{ marginRight: \"5px\" }} className={\"fa fa-github\"}></i>\n                        View on GitHub\n                    </Button>\n                </a>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default CardComponent;\n","import React, { FC } from \"react\";\nimport GitHubService from \"../../../services/GitHub/GitHub\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CardComponent from \"./CardComponent\";\nimport { useQuery } from \"react-query\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"300px\",\n        margin: \"30px\",\n    },\n    grid: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    icon: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n    },\n});\n\nconst GitHub: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\"gitHubRepositories\", () =>\n        GitHubService.getUserRepositories(\"alexiszamanidis\").then(({ data }) => data)\n    );\n\n    const gitHubFaIcon = (\n        <div className={`${classes.icon} fa-3x`}>\n            <i className={\"fa fa-github\" + (isLoading === true ? \" fa-spin\" : \"\")}></i>\n        </div>\n    );\n\n    return (\n        <div>\n            {isLoading ? (\n                gitHubFaIcon\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <div>\n                    {gitHubFaIcon}\n                    <Grid container spacing={3} className={classes.grid}>\n                        {data.map((repo: any) => {\n                            return (\n                                <Grid item xs={12} sm={4} md={4} key={repo.id}>\n                                    <CardComponent\n                                        name={repo.name}\n                                        description={repo.description}\n                                        language={repo.language}\n                                        stargazers_count={repo.stargazers_count}\n                                        forks_count={repo.forks_count}\n                                        html_url={repo.html_url}\n                                    />\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default GitHub;\n","import React, { FC } from \"react\";\nimport GitHub from \"./GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Portfolio: FC = () => {\n    return (\n        <Container>\n            <GitHub />\n        </Container>\n    );\n};\n\nexport default Portfolio;\n","import { makeStyles } from \"@material-ui/core\";\nimport { FC } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 1),\n        backgroundColor: \"#3F51B5\",\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    a: {\n        color: \"white\",\n        fontSize: \"15px\",\n    },\n}));\n\nconst Copyright: FC = () => {\n    const classes = useStyles();\n    return (\n        <h5 className=\"copyright\">\n            © {new Date().getFullYear()} Copyright:\n            <a\n                className=\"underline\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/alexiszamanidis\"\n                target=\"_blank\"\n            >\n                <b className={classes.a}>{\" Alexis Zamanidis\"}</b>\n            </a>\n        </h5>\n    );\n};\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Copyright />\n        </div>\n    );\n};\n\nexport default Footer;\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        \"@global\": {\n            \"*\": {\n                boxSizing: \"border-box\",\n            },\n            html: {\n                height: \"100%\",\n                width: \"100%\",\n            },\n            body: {\n                backgroundColor: \"#f4f6f8\",\n                height: \"100%\",\n                width: \"100%\",\n            },\n            a: {\n                textDecoration: \"none\",\n            },\n        },\n    })\n);\n\nconst GlobalStyles = () => {\n    useStyles();\n\n    return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: colors.common.white,\n            paper: colors.common.white,\n        },\n        primary: {\n            main: \"#3F51B5\",\n        },\n        secondary: {\n            main: \"#fff\",\n        },\n    },\n});\n\nexport default theme;\n","import { FC, useState } from \"react\";\n\nimport { tabItems } from \"./config\";\nimport AboutMe from \"./AboutMe\";\nimport Portfolio from \"./Portfolio\";\nimport Footer from \"./Footer\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { makeStyles } from \"@material-ui/core\";\nimport GlobalStyles from \"../globalStyles\";\nimport theme from \"../theme\";\nimport { ThemeProvider } from \"@material-ui/core\";\n// create a client for react-query\nconst queryClient = new QueryClient();\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n    },\n    main: {\n        marginBottom: theme.spacing(3),\n    },\n    footer: {\n        marginTop: \"auto\",\n    },\n    tabs: {\n        backgroundColor: \"#3F51B5\",\n        color: \"white\",\n    },\n}));\n\nconst App: FC = () => {\n    const classes = useStyles();\n\n    const [value, setValue] = useState<number>(0);\n\n    const showTabContent = () => {\n        if (value === 0) return <AboutMe />;\n        else if (value === 1) return <Portfolio />;\n        else return null;\n    };\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <ThemeProvider theme={theme}>\n                <GlobalStyles />\n                <div className={classes.root}>\n                    <div className={classes.main}>\n                        <Tabs\n                            value={value}\n                            onChange={(event, newValue) => setValue(newValue)}\n                            variant=\"fullWidth\"\n                            className={classes.tabs}\n                        >\n                            {tabItems.map((tabItem, index) => {\n                                return <Tab key={index} {...tabItem} />;\n                            })}\n                        </Tabs>\n                        {showTabContent()}\n                    </div>\n                    <div className={classes.footer}>\n                        <Footer />\n                    </div>\n                </div>\n            </ThemeProvider>\n        </QueryClientProvider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}