{"version":3,"sources":["config.js","components/Utilities/resource/LoadingGif.gif","components/Utilities/resource/ScrollToTopButton.png","components/Utilities/Utilities.js","components/NavigationBar/NavigationBar.js","components/App/App.js","index.js"],"names":["aboutMe","fullname","location","dateOfBirth","summary","image","cv","skills","name","tools","passionateAbout","hobbies","gitHubDetails","username","profileLink","gitLabDetails","linkedInDetails","navLinks","nav_item_class_name","link_class_name","to","smooth","offset","duration","text","SpinnerUtility","align","animation","Spinner","CalculateAge","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","ScrollToTopUtility","useState","is_visible","SetVisibility","useEffect","document","addEventListener","window","pageYOffset","onClick","scroll","scrollToTop","className","src","ScrollToTopButton","alt","ErrorPage","statusText","status","message","ErrorHandler","error","response","request","CardUtility","href","description","limit","button","Card","Body","Link","target","rel","Title","Text","TrimString","string","Footer","length","substring","propTypes","PropTypes","isRequired","number","NavigationBar","updateAppDarkMode","localStorage","JSON","parse","getItem","dark_mode","setDarkMode","setItem","stringify","nav_items","map","nav_item","index","Nav","Item","Navbar","id","prevMode","Brightness7","Brightness4","AboutMe","loadable","Portfolio","Contact","App","state","bind","nav_dark_mode","this","setState","intro","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.27cd6b9e.chunk.js","sourcesContent":["const aboutMe = {\r\n    fullname: \"Alexis Zamanidis\",\r\n    location: \"Athens, Greece\",\r\n    dateOfBirth: \"1998-01-20\",\r\n    summary:\r\n        \"I am currently an undergraduate student at National and Kapodistrian University of Athens in Department of Informatics and Telecommunications.\",\r\n    image: \"https://drive.google.com/uc?id=1TjlxLKkrl6fVg6GZLtdaJlIFb2Ojspv7\",\r\n    cv: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\r\n    skills: [\r\n        {\r\n            name: \"Languages\",\r\n            tools: \"C, C++, Java\",\r\n        },\r\n        {\r\n            name: \"Data Science\",\r\n            tools: \"Python\",\r\n        },\r\n        {\r\n            name: \"Frontend\",\r\n            tools: \"JavaScript, HTML, CSS, React\",\r\n        },\r\n        {\r\n            name: \"Backend\",\r\n            tools: \"PHP, Spring Boot\",\r\n        },\r\n        {\r\n            name: \"Databases\",\r\n            tools: \"MySQL\",\r\n        },\r\n        {\r\n            name: \"Other Tools\",\r\n            tools: \"Git, Balsamiq, Lucidchart\",\r\n        },\r\n    ],\r\n    passionateAbout: [\r\n        {\r\n            name: \"Frontend Web Development mainly with React\",\r\n        },\r\n        {\r\n            name: \"Backend Web Development mainly with Spring Boot\",\r\n        },\r\n        {\r\n            name: \"Machine Learning - Data Mining\",\r\n        },\r\n        {\r\n            name: \"Parallel Programming\",\r\n        },\r\n    ],\r\n    hobbies: [\r\n        {\r\n            name: \"Playing Football and Basketball\",\r\n        },\r\n        {\r\n            name: \"Calisthenics Workout\",\r\n        },\r\n    ],\r\n};\r\n\r\nconst gitHubDetails = {\r\n    username: \"alexiszamanidis\",\r\n    profileLink: \"https://github.com/alexiszamanidis\",\r\n};\r\n\r\nconst gitLabDetails = {\r\n    username: \"alexiszamanidis\",\r\n    profileLink: \"https://gitlab.com/alexiszamanidis\",\r\n};\r\n\r\nconst linkedInDetails = {\r\n    profileLink: \"https://linkedin.com/in/alexiszamanidis\",\r\n};\r\n\r\nconst navLinks = [\r\n    {\r\n        nav_item_class_name: \"nav_item\",\r\n        link_class_name: \"nav_link\",\r\n        to: \"AboutMe\",\r\n        smooth: true,\r\n        offset: -70,\r\n        duration: 600,\r\n        text: \"About me\",\r\n    },\r\n    {\r\n        nav_item_class_name: \"nav_item\",\r\n        link_class_name: \"nav_link\",\r\n        to: \"Portfolio\",\r\n        smooth: true,\r\n        offset: -70,\r\n        duration: 600,\r\n        text: \"Portfolio\",\r\n    },\r\n    {\r\n        nav_item_class_name: \"nav_item\",\r\n        link_class_name: \"nav_link\",\r\n        to: \"Contact\",\r\n        smooth: true,\r\n        offset: -70,\r\n        duration: 600,\r\n        text: \"Contact\",\r\n    },\r\n];\r\n\r\nexport { aboutMe, gitHubDetails, gitLabDetails, linkedInDetails, navLinks };\r\n","export default __webpack_public_path__ + \"static/media/LoadingGif.e9aca3ba.gif\";","export default __webpack_public_path__ + \"static/media/ScrollToTopButton.75185b2b.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Spinner, Card } from \"react-bootstrap\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport \"./Utilities.css\";\r\nimport LoadingGif from \"./resource/LoadingGif.gif\";\r\nimport PropTypes from \"prop-types\";\r\nimport ScrollToTopButton from \"./resource/ScrollToTopButton.png\";\r\n\r\nexport function SpinnerUtility({ align, animation }) {\r\n    return (\r\n        <div align={align}>\r\n            <Spinner animation={animation} />\r\n        </div>\r\n    );\r\n}\r\n\r\nSpinnerUtility.propTypes = {\r\n    align: PropTypes.string.isRequired,\r\n    animation: PropTypes.string.isRequired,\r\n};\r\n\r\nexport function LoadingPageGif({ background }) {\r\n    return (\r\n        <div className=\"loading_page_gif\" style={{ backgroundColor: background }}>\r\n            <img src={LoadingGif} alt=\"loading_page_gif\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nLoadingPageGif.propTypes = {\r\n    background: PropTypes.string.isRequired,\r\n};\r\n\r\nexport function CalculateAge({ dateOfBirth }) {\r\n    let todayDate = new Date();\r\n    let todayDay = todayDate.getDate();\r\n    let todayMonth = todayDate.getMonth();\r\n    let todayYear = todayDate.getFullYear();\r\n\r\n    let birthDate = new Date(dateOfBirth);\r\n    let birthDay = birthDate.getDate();\r\n    let birthMonth = birthDate.getMonth();\r\n    let birthYear = birthDate.getFullYear();\r\n\r\n    let age = todayYear - birthYear;\r\n\r\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\r\n    else return age - 1;\r\n}\r\n\r\nCalculateAge.propTypes = {\r\n    dateOfBirth: PropTypes.string.isRequired,\r\n};\r\n\r\nexport function ScrollToTopUtility() {\r\n    const [is_visible, SetVisibility] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"scroll\", function () {\r\n            if (window.pageYOffset > 600) SetVisibility(true);\r\n            else SetVisibility(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        is_visible && (\r\n            <img\r\n                onClick={scroll.scrollToTop}\r\n                className=\"scroll_to_top_button\"\r\n                src={ScrollToTopButton}\r\n                alt=\"scroll_to_top_button\"\r\n            />\r\n        )\r\n    );\r\n}\r\n\r\nexport function ErrorPage({ statusText, status, message }) {\r\n    return (\r\n        <div className=\"error_page\">\r\n            <div className=\"container\">\r\n                <h2> {statusText} </h2>\r\n                <h1> {status} </h1>\r\n                <span> {message} </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function ErrorHandler({ error }) {\r\n    if (error.response)\r\n        return <ErrorPage statusText={error.response.statusText} status={error.response.status} />;\r\n    else if (error.request) return <ErrorPage message=\"Problem with Request\" />;\r\n    else return <ErrorPage message=\"Error\" />;\r\n}\r\n\r\nErrorHandler.propTypes = {\r\n    error: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function CardUtility({ src, href, name, description, limit, button }) {\r\n    return (\r\n        <Card>\r\n            <div className=\"image\">\r\n                <img src={src} className=\"card-img-top\" alt=\"black\" />\r\n            </div>\r\n            <Card.Body>\r\n                <Card.Link href={href} target=\"_blank\" rel=\"noopener\">\r\n                    <Card.Title> {name} </Card.Title>\r\n                </Card.Link>\r\n                <Card.Text>\r\n                    <TrimString string={description} limit={limit} />\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Card.Link href={href} target=\"_blank\" rel=\"noopener\" className=\"btn btn-primary\">\r\n                    {button}\r\n                </Card.Link>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport function TrimString({ string, limit }) {\r\n    return string != null\r\n        ? string.length <= limit\r\n            ? string\r\n            : string.substring(0, limit) + \"...\"\r\n        : \"\";\r\n}\r\n\r\nTrimString.propTypes = {\r\n    string: PropTypes.string.isRequired,\r\n    limit: PropTypes.number.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./NavigationBar.css\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Brightness7, Brightness4 } from \"@material-ui/icons\";\r\nimport { navLinks } from \"../../config.js\";\r\n\r\nfunction NavigationBar({ updateAppDarkMode }) {\r\n    const [dark_mode, setDarkMode] = useState(getInitialMode());\r\n    // save the dark_mode to your local storage and update App's component dark_mode variable\r\n    useEffect(() => {\r\n        localStorage.setItem(\"dark_mode\", JSON.stringify(dark_mode));\r\n        updateAppDarkMode(dark_mode);\r\n        // eslint-disable-next-line\r\n    }, [dark_mode]);\r\n\r\n    // initialize dark mode\r\n    function getInitialMode() {\r\n        const isReturningUser = \"dark_mode\" in localStorage;\r\n        // get user mode preference\r\n        if (isReturningUser === true) {\r\n            const savedMode = JSON.parse(localStorage.getItem(\"dark_mode\"));\r\n            return savedMode;\r\n        } else return true;\r\n    }\r\n\r\n    // create our navigation items\r\n    const nav_items = navLinks.map((nav_item, index) => {\r\n        return (\r\n            <Nav.Item key={index} className={nav_item.nav_item_class_name}>\r\n                <Link\r\n                    className={nav_item.link_class_name}\r\n                    to={nav_item.to}\r\n                    smooth={nav_item.smooth}\r\n                    offset={nav_item.offset}\r\n                    duration={nav_item.duration}\r\n                >\r\n                    {nav_item.text}\r\n                </Link>\r\n            </Nav.Item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Navbar id=\"NavigationBar\" className={dark_mode ? \"dark_mode_nav\" : \"light_mode_nav\"}>\r\n            <Nav className=\"nav_links\">\r\n                {nav_items}\r\n                <div\r\n                    className=\"dark_mode_icon\"\r\n                    onClick={() => setDarkMode((prevMode) => !prevMode)}\r\n                >\r\n                    {dark_mode ? <Brightness7 /> : <Brightness4 />}\r\n                </div>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { ScrollToTopUtility } from \"../Utilities/Utilities.js\";\r\nimport loadable from \"@loadable/component\";\r\nimport NavigationBar from \"../NavigationBar/NavigationBar.js\";\r\n\r\nconst AboutMe = loadable(() => import(\"../AboutMe/AboutMe.js\"));\r\nconst Portfolio = loadable(() => import(\"../Portfolio/Portfolio.js\"));\r\nconst Contact = loadable(() => import(\"../Contact/Contact.js\"));\r\nconst Footer = loadable(() => import(\"../Footer/Footer.js\"));\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dark_mode: true,\r\n        };\r\n        this.updateAppDarkMode = this.updateAppDarkMode.bind(this);\r\n    }\r\n\r\n    // function that I pass to NavigationBar component for updating the dark_mode variable\r\n    updateAppDarkMode(nav_dark_mode) {\r\n        this.setState({ dark_mode: nav_dark_mode });\r\n    }\r\n\r\n    render() {\r\n        const { dark_mode } = this.state;\r\n\r\n        // hello header centered in wallpaper\r\n        const intro = (\r\n            <div className=\"intro\">\r\n                <img className=\"background\" src=\"/images/Mountain.jpg\" alt=\"background\" />\r\n                <div className=\"centered_text\">\r\n                    <h1> HI! I'M ALEX </h1>\r\n                    <span> and this is my Portfolio page </span>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <NavigationBar updateAppDarkMode={this.updateAppDarkMode} />\r\n                {intro}\r\n                <AboutMe dark_mode={dark_mode} />\r\n                <Portfolio dark_mode={dark_mode} />\r\n                <Contact dark_mode={dark_mode} />\r\n                <Footer dark_mode={dark_mode} />\r\n                <ScrollToTopUtility />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}