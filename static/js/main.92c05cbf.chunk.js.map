{"version":3,"sources":["components/Tabs/config.tsx","components/AboutMe/Contact/config.tsx","components/AboutMe/Contact/index.tsx","components/AboutMe/Hobbies/config.tsx","components/AboutMe/Hobbies/index.tsx","utilities/index.tsx","components/AboutMe/Personal/PersonalSkeleton/index.tsx","services/config.tsx","services/GitHub/GitHub.tsx","components/AboutMe/Personal/index.tsx","components/AboutMe/Education/config.tsx","components/AboutMe/Education/index.tsx","components/AboutMe/Experience/config.tsx","components/AboutMe/Experience/index.tsx","components/AboutMe/ButtonLinks/config.tsx","components/CustomButtonLink/index.tsx","components/AboutMe/ButtonLinks/index.tsx","components/AboutMe/PassionAbout/config.tsx","components/AboutMe/PassionAbout/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/Repositories/CardSkeleton/index.tsx","components/Portfolio/GitHub/Repositories/CardComponent/index.tsx","components/Portfolio/GitHub/Repositories/index.tsx","components/Portfolio/GitHub/Repositories/config.tsx","components/CustomHooks/useDebounce.tsx","components/Portfolio/GitHub/useGitHubFaIconSpinner.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/GitHub/filterHooks.tsx","components/Portfolio/index.tsx","components/Tabs/index.tsx","components/Tabs/useTabs.tsx","components/Footer/index.tsx","components/Layout/index.tsx","pages/index.tsx","theme/index.tsx","globalStyles/index.tsx","providers/index.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","contacts","name","link","useStyles","makeStyles","theme","title","color","palette","text","primary","list","padding","item","Contact","classes","Box","mb","fontWeight","className","Typography","variant","List","map","index","ListItem","Link","href","target","rel","component","display","hobbies","Hobbies","calculateAge","dateOfBirth","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","avatar","margin","width","spacing","height","marginBottom","personal","textAlign","bio","skeletonItem","marginRight","PersonalSkeleton","Fragment","Skeleton","alignItems","justifyContent","getOptions","baseUrl","endPoint","parameters","url","URLSearchParams","toString","method","headers","Accept","Authorization","process","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","basePath","this","username","console","log","axios","repository","flexDirection","info","Personal","useQuery","GitHub","getUserData","then","data","refetchOnMount","cacheTime","Infinity","isLoading","isError","Alert","severity","Avatar","alt","src","avatar_url","location","education","university","duration","description","itemName","itemDescription","itemLocation","itemDuration","itemLinkIcon","itemSlash","Education","useTheme","matches","useMediaQuery","breakpoints","up","experience","from","to","jobTitle","company","typeOfEmployee","Experience","buttons","button","CustomButtonLink","size","data-test-id","Button","startIcon","root","ButtonLinks","passionateAbout","PassionateAbout","marginTop","paper","secondary","AboutMe","Container","maxWidth","Paper","skeleton","CardSkeleton","timeout","Grow","in","Card","CardContent","gutterBottom","CardActions","style","marginLeft","details","CardComponent","language","stargazers_count","forks_count","html_url","grid","Repositories","repositories","loading","Grid","container","Array","skeletonIndex","sm","md","lg","repo","id","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","fontSize","searchFields","search","select","error","GitHubService","getUserRepositories","setSearch","handleSearch","e","useSearch","debouncedSearch","selectedLanguage","setSelectedLanguage","languages","useMemo","undefined","uniqueLanguages","Set","filter","handleLanguage","useUniqueLanguages","computedData","tempRepositories","length","toLowerCase","includes","useFilteredData","gitHubFaIcon","useGitHubFaIconSpinner","Tooltip","placement","TextField","onChange","FormControl","InputLabel","Select","native","Portfolio","tabs","MyTabs","setValue","showTabContent","handleTabs","event","newValue","useTabs","bgcolor","Tabs","TabIndicatorProps","tabItem","Tab","a","Copyright","Footer","minHeight","main","paddingBottom","footer","Layout","children","App","createMuiTheme","background","default","colors","common","white","typography","fontFamily","join","createStyles","boxSizing","html","body","backgroundColor","textDecoration","GlobalStyles","queryClient","QueryClient","Providers","QueryClientProvider","client","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92c05cbf.chunk.js","sourcesContent":["import { TabItem } from \"./types\";\nimport { AccountBox, Work } from \"@material-ui/icons\";\n\nconst tabItems: TabItem[] = [\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\n    { label: \"PORTFOLIO\", icon: <Work /> },\n];\n\nexport { tabItems };\n","import { ContactItem } from \"./types\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nconst contacts: ContactItem[] = [\n    {\n        icon: <PhoneIcon />,\n        name: \"+30 698-044-3908\",\n        link: \"tel:+30698-044-3908\",\n    },\n    {\n        icon: <MailIcon />,\n        name: \"alexiszamanidis@outlook.com\",\n        link: \"mailto:alexiszamanidis@outlook.com\",\n    },\n];\n\nexport { contacts };\n","import { FC } from \"react\";\nimport { contacts } from \"./config\";\nimport { Box, Link, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n    link: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Contact: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Contact</Typography>\n            </Box>\n            <List className={classes.list}>\n                {contacts.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Link\n                                href={item.link}\n                                className={classes.link}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                <Typography component={\"span\"}>\n                                    <Box display=\"flex\">\n                                        {item.icon}\n                                        {item.name}\n                                    </Box>\n                                </Typography>\n                            </Link>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Contact;\n","import { HobbyItem } from \"./types\";\n\nconst hobbies: HobbyItem[] = [\n    {\n        name: \"Playing Football and Basketball\",\n    },\n    {\n        name: \"Calisthenics Workout\",\n    },\n];\n\nexport { hobbies };\n","import { FC } from \"react\";\nimport { hobbies } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Hobbies: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Hobbies</Typography>\n            </Box>\n            <List className={classes.list}>\n                {hobbies.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Hobbies;\n","export const trimString = (string: string | null, limit: number): string => {\n    return string !== null\n        ? string.length <= limit\n            ? string\n            : string.substring(0, limit) + \"...\"\n        : \"\";\n};\n\nexport const calculateAge = (dateOfBirth: string): number => {\n    let todayDate = new Date();\n    let todayDay = todayDate.getDate();\n    let todayMonth = todayDate.getMonth();\n    let todayYear = todayDate.getFullYear();\n\n    let birthDate = new Date(dateOfBirth);\n    let birthDay = birthDate.getDate();\n    let birthMonth = birthDate.getMonth();\n    let birthYear = birthDate.getFullYear();\n\n    let age = todayYear - birthYear;\n\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\n    else return age - 1;\n};\n\nexport const findByDataTestIdAttribute = (component: any, attribute: string) => {\n    const wrapper = component.find(`[data-test-id=\"${attribute}\"]`);\n    return wrapper;\n};\n","import React, { FC } from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: \"15px\",\n    },\n    personal: {\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        color: theme.palette.text.primary,\n    },\n    bio: {\n        color: theme.palette.text.primary,\n    },\n    skeletonItem: {\n        marginRight: \"2px\",\n    },\n}));\n\nconst PersonalSkeleton: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Skeleton className={classes.avatar} variant=\"circle\" width={250} height={250} />\n            <div className={classes.personal}>\n                <div className={classes.item + \" personal\"}>\n                    <Typography component={\"span\"}>\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                            <Skeleton\n                                className={classes.skeletonItem}\n                                variant=\"circle\"\n                                width={20}\n                                height={20}\n                            />\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                            <Skeleton\n                                className={classes.skeletonItem}\n                                variant=\"circle\"\n                                width={20}\n                                height={20}\n                            />\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                            <Skeleton\n                                className={classes.skeletonItem}\n                                variant=\"circle\"\n                                width={20}\n                                height={20}\n                            />\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                        </Box>\n                    </Typography>\n                </div>\n            </div>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">\n                    <Skeleton className={classes.skeletonItem} width={\"20%\"} />\n                    <Skeleton />\n                    <Skeleton />\n                    <Skeleton width={\"50%\"} />\n                </Typography>\n            </Box>\n            <Typography className={classes.bio}></Typography>\n        </React.Fragment>\n    );\n};\n\nexport default PersonalSkeleton;\n","export const getOptions = (baseUrl: string, endPoint: string, parameters?: any): object => {\n    return {\n        url: `${baseUrl}${endPoint}?` + new URLSearchParams(parameters).toString(),\n        method: \"GET\",\n        headers: {\n            Accept: \"application/vnd.github.v3+json\",\n            Authorization: `Token ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`,\n        },\n    };\n};\n","import axios from \"axios\";\nimport { getOptions } from \"../config\";\n\n// const clientId = \"\";\n// const clientSecret = \"\";\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\n\nclass GitHubService {\n    basePath: string;\n\n    constructor() {\n        this.basePath = \"https://api.github.com\";\n    }\n\n    getUserData(username: string) {\n        console.log(getOptions(`${this.basePath}`, `/users/${username}`));\n        return axios(getOptions(`${this.basePath}`, `/users/${username}`));\n    }\n\n    getUserRepositories(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/repos`));\n    }\n\n    getRepositoryTopics(username: string, repository: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/${repository}/topics`));\n    }\n}\n\nexport default new GitHubService();\n","import React, { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { calculateAge } from \"../../../utilities\";\nimport PersonalSkeleton from \"./PersonalSkeleton\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport GitHub from \"../../../services/GitHub/GitHub\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: \"15px\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    bio: {\n        color: theme.palette.text.primary,\n    },\n    personal: {\n        marginBottom: \"30px\",\n        color: theme.palette.text.primary,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // eslint-disable-next-line\n        [\"@media (min-width:450px)\"]: {\n            flexDirection: \"row\",\n        },\n    },\n    info: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n}));\n\nconst Personal: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\n        \"gitHubUserData\",\n        () => GitHub.getUserData(\"alexiszamanidis\").then(({ data }) => data),\n        { refetchOnMount: false, cacheTime: Infinity }\n    );\n\n    return (\n        <Box mb={5}>\n            {isLoading ? (\n                <PersonalSkeleton />\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <React.Fragment>\n                    <Avatar\n                        alt=\"Alexis Zamanidis\"\n                        src={data.avatar_url}\n                        className={classes.avatar}\n                    />\n                    <div className={classes.personal}>\n                        <div className={classes.info}>\n                            <PersonIcon />\n                            <Typography>{data.name}</Typography>\n                        </div>\n                        <div className={classes.info}>\n                            <LocationOnIcon />\n                            <Typography>{data.location}</Typography>\n                        </div>\n                        <div className={classes.info}>\n                            <CakeIcon />\n                            <Typography>{calculateAge(\"1998-01-20\")}</Typography>\n                        </div>\n                    </div>\n                    <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                        <Typography variant=\"h6\">Summary</Typography>\n                    </Box>\n                    <Typography className={classes.bio}>{data.bio}</Typography>\n                </React.Fragment>\n            )}\n        </Box>\n    );\n};\n\nexport default Personal;\n","import { EducationItem } from \"./types\";\n\nconst education: EducationItem[] = [\n    {\n        university: \"National & Kapodistrian University of Athens\",\n        duration: \"Oct 2016 - Feb 2021\",\n        description:\n            \"B.Sc. in Computer Science - Specializations: Software, Data & Knowledge Management.\",\n        location: \"Athens, Greece\",\n        link: \"https://www.di.uoa.gr/\",\n    },\n];\n\nexport { education };\n","import { FC } from \"react\";\nimport { education } from \"./config\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box, Link, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemName: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemLocation: {\n        marginRight: \"5px\",\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n    itemLinkIcon: {\n        color: \"black\",\n    },\n    itemSlash: {\n        display: \"none\",\n        // eslint-disable-next-line\n        [\"@media (min-width:960px)\"]: {\n            display: \"block\",\n            marginRight: \"5px\",\n        },\n    },\n}));\n\nconst Education: FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Education</Typography>\n            </Box>\n            {education.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box\n                            display=\"flex\"\n                            flexDirection={matches ? \"row\" : \"column\"}\n                            justifyContent=\"space-between\"\n                        >\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\n                                <Typography color=\"primary\" className={classes.itemName}>\n                                    {item.university}\n                                </Typography>\n                                <Box display=\"flex\" flexDirection=\"row\">\n                                    <Typography className={classes.itemSlash}>{\" | \"}</Typography>\n                                    <Typography className={classes.itemLocation}>\n                                        {item.location}\n                                    </Typography>\n                                    <Link href={item.link} target=\"_blank\" rel=\"noreferrer\">\n                                        <LinkIcon className={classes.itemLinkIcon} />\n                                    </Link>\n                                </Box>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.duration}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Education;\n","import { ExperienceItem } from \"./types\";\n\nconst experience: ExperienceItem[] = [\n    {\n        from: \"Oct 2020\",\n        to: \"April 2021\",\n        jobTitle: \"Full Stack Developer, Intern\",\n        company: \"ITML\",\n        location: \"Athens, Greece\",\n        typeOfEmployee: \"Remote Full-Time\",\n        description:\n            \"I built a Web Application which will be used by Doctors in their daily life  with main functionalities of automating Visits, Prescriptions and Referrals. \" +\n            \"But also it has other very useful functionalities such as Calendar, Pdf Generator for handwritten Prescriptions, Medicines Statistics. \" +\n            \"Its basic functionality is based on the API provided by IDIKA which is the official provider of e-Prescription in Greece.\",\n        link: null,\n    },\n];\n\nexport { experience };\n","import { FC } from \"react\";\nimport { experience } from \"./config\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n    itemSlash: {\n        display: \"none\",\n        // eslint-disable-next-line\n        [\"@media (min-width:960px)\"]: {\n            display: \"block\",\n            marginRight: \"5px\",\n        },\n    },\n}));\n\nconst Experience: FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Experience</Typography>\n            </Box>\n            {experience.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box\n                            display=\"flex\"\n                            flexDirection={matches ? \"row\" : \"column\"}\n                            justifyContent=\"space-between\"\n                        >\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\n                                <Typography\n                                    color=\"primary\"\n                                    className={classes.item}\n                                >{`${item.jobTitle} `}</Typography>\n                                <Typography className={classes.itemSlash}>{\" | \"}</Typography>\n                                <Typography>{`${item.company} - ${item.location} (${item.typeOfEmployee})`}</Typography>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.from} - {item.to}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Experience;\n","import { ButtonItem } from \"./types\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst buttons: ButtonItem[] = [\n    {\n        text: \"CV\",\n        icon: <ReceiptIcon />,\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\n    },\n    {\n        text: \"LinkedIn\",\n        icon: <LinkedInIcon />,\n        link: \"http://linkedin.com/in/alexiszamanidis\",\n    },\n    {\n        text: \"GitHub\",\n        icon: <GitHubIcon />,\n        link: \"https://github.com/alexiszamanidis\",\n    },\n];\n\nexport { buttons };\n","import { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { CustomButtonLinkProps } from \"./types\";\n\nconst useStyles = makeStyles({\n    button: {\n        margin: \"5px 5px 5px 5px\",\n    },\n});\n\nconst CustomButtonLink: FC<CustomButtonLinkProps> = ({ link, size, icon, text }) => {\n    const classes = useStyles();\n\n    return (\n        <a data-test-id=\"custom-button-link-a\" href={link} target=\"_blank\" rel=\"noreferrer\">\n            <Button\n                data-test-id=\"custom-button-link-button\"\n                color=\"primary\"\n                variant=\"contained\"\n                size={size}\n                startIcon={icon}\n                className={classes.button}\n            >\n                {text}\n            </Button>\n        </a>\n    );\n};\n\nexport default CustomButtonLink;\n","import { FC } from \"react\";\nimport { buttons } from \"./config\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport CustomButtonLink from \"../../CustomButtonLink\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n    },\n});\n\nconst ButtonLinks: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={3} className={classes.root}>\n            {buttons.map((button, index) => {\n                return (\n                    <CustomButtonLink\n                        key={index}\n                        link={button.link}\n                        size=\"medium\"\n                        icon={button.icon}\n                        text={button.text}\n                    />\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default ButtonLinks;\n","import { PassionateAboutItem } from \"./types\";\n\nconst passionateAbout: PassionateAboutItem[] = [\n    {\n        name: \"Full Stack Development mainly with React.js, Spring Boot and MySQL\",\n    },\n    {\n        name: \"Machine Learning - Data Mining\",\n    },\n    {\n        name: \"Parallel Programming\",\n    },\n];\n\nexport { passionateAbout };\n","import { FC } from \"react\";\nimport { passionateAbout } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst PassionateAbout: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Passionate About</Typography>\n            </Box>\n            <List className={classes.list}>\n                {passionateAbout.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default PassionateAbout;\n","import { FC } from \"react\";\nimport Contact from \"./Contact\";\nimport Hobbies from \"./Hobbies\";\nimport Personal from \"./Personal\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport ButtonLinks from \"./ButtonLinks\";\nimport PassionateAbout from \"./PassionAbout\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"25px\",\n    },\n    paper: {\n        padding: theme.spacing(3),\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst AboutMe: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Container data-test-id=\"about-me\" maxWidth=\"md\" className={classes.root}>\n            <Paper className={classes.paper}>\n                <Personal data-test-id=\"personal\" />\n                <Education data-test-id=\"education\" />\n                <Experience data-test-id=\"experience\" />\n                <PassionateAbout data-test-id=\"passionate-about\" />\n                <Hobbies data-test-id=\"hobbies\" />\n                <Contact data-test-id=\"contact\" />\n                <ButtonLinks data-test-id=\"button-links\" />\n            </Paper>\n        </Container>\n    );\n};\n\nexport default AboutMe;\n","import React, { FC } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { CardSkeletonProps } from \"./types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles({\n    skeleton: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n    },\n    skeletonItem: {\n        marginRight: \"2px\",\n    },\n});\n\nconst CardSkeleton: FC<CardSkeletonProps> = ({ timeout }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Grow in={true} timeout={timeout}>\n                <Card className={classes.skeleton}>\n                    <CardContent>\n                        <Typography component={\"span\"} color=\"textSecondary\" gutterBottom>\n                            <Skeleton width={\"70%\"} />\n                        </Typography>\n                        <Typography component={\"span\"}>\n                            <Skeleton />\n                            <Skeleton />\n                            <Skeleton />\n                            <Skeleton />\n                        </Typography>\n                        <Typography component={\"span\"}>\n                            <Box display=\"flex\" alignItems=\"center\">\n                                <Skeleton className={classes.skeletonItem} width={\"40%\"} />\n                                <Skeleton\n                                    className={classes.skeletonItem}\n                                    variant=\"circle\"\n                                    width={20}\n                                    height={20}\n                                />\n                                <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                                <Skeleton\n                                    className={classes.skeletonItem}\n                                    variant=\"circle\"\n                                    width={20}\n                                    height={20}\n                                />\n                                <Skeleton className={classes.skeletonItem} width={\"10%\"} />\n                            </Box>\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Skeleton width={\"70%\"} height={40} style={{ marginLeft: \"5px\" }} />\n                    </CardActions>\n                </Card>\n            </Grow>\n        </React.Fragment>\n    );\n};\n\nexport default CardSkeleton;\n","import { FC } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardComponentProps } from \"./types\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CustomButtonLink from \"../../../../CustomButtonLink\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport CodeSharpIcon from \"@material-ui/icons/CodeSharp\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        // eslint-disable-next-line\n        [\"@media (min-width:1100px)\"]: {\n            flexDirection: \"row\",\n        },\n    },\n    info: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n});\n\nconst CardComponent: FC<CardComponentProps> = ({\n    name,\n    description,\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n}) => {\n    const classes = useStyles();\n    return (\n        <Card data-test-id=\"card-component\" className={classes.root}>\n            <CardContent>\n                <Typography\n                    component={\"span\"}\n                    data-test-id=\"card-component-name\"\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    <Box fontWeight={500}>{name}</Box>\n                </Typography>\n                <Typography component={\"span\"} data-test-id=\"card-component-description\">\n                    {description}\n                </Typography>\n                <Typography\n                    component={\"span\"}\n                    data-test-id=\"card-component-language-star-fork\"\n                    className={classes.details}\n                >\n                    <div className={classes.info}>\n                        <b>language</b>: {language}\n                    </div>\n                    <div className={classes.info}>\n                        <StarIcon />\n                        {` ${stargazers_count} `}\n                    </div>\n                    <div className={classes.info}>\n                        <CodeSharpIcon />\n                        {` ${forks_count} `}\n                    </div>\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <CustomButtonLink\n                    data-test-id=\"card-component-custom-button-link\"\n                    link={html_url}\n                    size=\"small\"\n                    icon={<GitHubIcon />}\n                    text={\"View on GitHub\"}\n                />\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CardComponent;\n","import { FC } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport CardSkeleton from \"./CardSkeleton\";\nimport { Repo, RepoProps } from \"./types\";\nimport CardComponent from \"./CardComponent\";\nimport { numberOfSkeletons } from \"./config\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    grid: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n});\n\nconst Repositories: FC<RepoProps> = ({ repositories, loading }) => {\n    const classes = useStyles();\n\n    return (\n        <Grid data-test-id=\"repositories\" container spacing={3} className={classes.grid}>\n            {loading\n                ? [...Array(numberOfSkeletons)].map((skeleton, skeletonIndex) => {\n                      return (\n                          <Grid item sm={12} md={6} lg={4} key={skeletonIndex}>\n                              <CardSkeleton timeout={skeletonIndex * 500} />\n                          </Grid>\n                      );\n                  })\n                : repositories.map((repo: Repo) => {\n                      return (\n                          <Grid data-test-id=\"repository\" item sm={12} md={6} lg={4} key={repo.id}>\n                              <CardComponent\n                                  data-test-id=\"repository-card-component\"\n                                  name={repo.name}\n                                  description={repo.description}\n                                  language={repo.language}\n                                  stargazers_count={repo.stargazers_count}\n                                  forks_count={repo.forks_count}\n                                  html_url={repo.html_url}\n                              />\n                          </Grid>\n                      );\n                  })}\n        </Grid>\n    );\n};\n\nexport default Repositories;\n","export const numberOfSkeletons: number = 4;\n","import { useEffect, useState } from \"react\";\n\nfunction useDebounce(value: string, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;\n","import { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"10px\",\n    },\n    icon: {\n        fontSize: \"50px\",\n    },\n});\n\nexport const useGitHubFaIconSpinner = (isLoading: boolean): JSX.Element => {\n    const classes = useStyles();\n\n    const gitHubFaIcon = useMemo(() => {\n        return (\n            <div className={classes.root}>\n                <GitHubIcon className={`${classes.icon} ${isLoading ? \"spin\" : \"\"}`} />\n            </div>\n        );\n    }, [isLoading, classes]);\n\n    return gitHubFaIcon;\n};\n","import React, { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Repositories from \"./Repositories\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useDebounce from \"../../CustomHooks/useDebounce\";\nimport GitHubService from \"../../../services/GitHub/GitHub\";\nimport { useGitHubFaIconSpinner } from \"./useGitHubFaIconSpinner\";\nimport { useFilteredData, useSearch, useUniqueLanguages } from \"./filterHooks\";\nimport { TextField, FormControl, InputLabel, Select, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"300px\",\n        margin: \"30px\",\n    },\n    searchFields: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            flexDirection: \"row\",\n        },\n    },\n    search: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"50%\",\n        },\n    },\n    select: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"50%\",\n        },\n    },\n    error: {\n        marginTop: \"10px\",\n    },\n});\n\nconst GitHub: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\n        \"gitHubRepositories\",\n        () => GitHubService.getUserRepositories(\"alexiszamanidis\").then(({ data }) => data),\n        { refetchOnMount: false, cacheTime: Infinity }\n    );\n\n    const { search, handleSearch } = useSearch();\n    const debouncedSearch = useDebounce(search, 500);\n    const { selectedLanguage, handleLanguage, languages } = useUniqueLanguages(data);\n    const { computedData } = useFilteredData(data, debouncedSearch, selectedLanguage);\n\n    const gitHubFaIcon = useGitHubFaIconSpinner(isLoading);\n\n    return (\n        <React.Fragment>\n            {gitHubFaIcon}\n            <div className={classes.searchFields}>\n                <Tooltip\n                    data-test-id=\"tooltip-search-text-field\"\n                    title=\"filter by repository name and description\"\n                    placement=\"top\"\n                >\n                    <TextField\n                        data-test-id=\"search-text-field\"\n                        label=\"Search\"\n                        variant=\"outlined\"\n                        className={classes.search}\n                        onChange={handleSearch}\n                        value={search}\n                    />\n                </Tooltip>\n                <FormControl\n                    data-test-id=\"select-form-control\"\n                    variant=\"outlined\"\n                    className={classes.select}\n                >\n                    <InputLabel data-test-id=\"select-input-label\">Language</InputLabel>\n                    <Select\n                        data-test-id=\"select\"\n                        native\n                        label=\"Language\"\n                        value={selectedLanguage}\n                        onChange={handleLanguage}\n                    >\n                        <option value=\"\" />\n                        {languages.map((language, index) => {\n                            return (\n                                <option key={index} value={language}>\n                                    {language}\n                                </option>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            </div>\n            {isError ? (\n                <Alert className={classes.error} severity=\"error\">\n                    Something happened\n                </Alert>\n            ) : (\n                <Repositories\n                    data-test-id=\"repositories\"\n                    repositories={computedData}\n                    loading={isLoading}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default GitHub;\n","import { Repo } from \"./types\";\nimport { useState, useMemo } from \"react\";\n\nexport const useSearch = () => {\n    const [search, setSearch] = useState(\"\");\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(e.target.value);\n    };\n    return { search, setSearch, handleSearch };\n};\n\nexport const useUniqueLanguages = (data: Repo[]) => {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const handleLanguage = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setSelectedLanguage(e.target.value as string);\n    };\n\n    const languages = useMemo(() => {\n        if (data === undefined) return [];\n        let uniqueLanguages = new Set<string>(\n            data\n                .filter(\n                    ({ language }: { language: string | null }) =>\n                        language !== null && language !== \"\"\n                )\n                .map(({ language }: { language: string }) => language)\n        );\n        return Array.from(uniqueLanguages);\n    }, [data]);\n\n    return { selectedLanguage, setSelectedLanguage, handleLanguage, languages };\n};\n\nexport const useFilteredData = (\n    data: Repo[],\n    debouncedSearch: string,\n    selectedLanguage: string\n) => {\n    const computedData = useMemo(() => {\n        if (data === undefined) return [];\n        let tempRepositories = data;\n        if (debouncedSearch.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ name, description }: { name: string; description: string }) => {\n                    return (\n                        name.toString().toLowerCase().includes(debouncedSearch.toLowerCase()) ||\n                        description.toString().toLowerCase().includes(debouncedSearch.toLowerCase())\n                    );\n                }\n            );\n        }\n\n        if (selectedLanguage.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ language }: { language: string | null }) => {\n                    return language === selectedLanguage;\n                }\n            );\n        }\n\n        return tempRepositories;\n    }, [data, debouncedSearch, selectedLanguage]);\n\n    return { computedData };\n};\n","import { FC } from \"react\";\nimport GitHub from \"./GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Portfolio: FC = () => {\n    return (\n        <Container data-test-id=\"card-portfolio\">\n            <GitHub data-test-id=\"github\" />\n        </Container>\n    );\n};\n\nexport default Portfolio;\n","import React, { FC } from \"react\";\nimport { tabItems } from \"./config\";\nimport { useTabs } from \"./useTabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    tabs: {\n        color: \"white\",\n    },\n});\n\nconst MyTabs: FC = () => {\n    const classes = useStyles();\n\n    const { value, handleTabs, showTabContent } = useTabs();\n\n    return (\n        <React.Fragment>\n            <Box data-test-id=\"tabs\" bgcolor=\"primary.main\">\n                <Tabs\n                    value={value}\n                    onChange={handleTabs}\n                    variant=\"fullWidth\"\n                    className={classes.tabs}\n                    TabIndicatorProps={{\n                        style: {\n                            height: \"5px\",\n                        },\n                    }}\n                >\n                    {tabItems.map((tabItem, index) => {\n                        return <Tab key={index} {...tabItem} />;\n                    })}\n                </Tabs>\n            </Box>\n            {showTabContent}\n        </React.Fragment>\n    );\n};\n\nexport default MyTabs;\n","import AboutMe from \"../AboutMe\";\nimport Portfolio from \"../Portfolio\";\nimport { useState, useMemo } from \"react\";\n\nexport const useTabs = () => {\n    const [value, setValue] = useState<number>(0);\n\n    const showTabContent: JSX.Element | null = useMemo(() => {\n        if (value === 0) return <AboutMe />;\n        else if (value === 1) return <Portfolio />;\n        else return null;\n    }, [value]);\n\n    const handleTabs = (event: any, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return { value, setValue, handleTabs, showTabContent };\n};\n","import { FC } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 1),\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    a: {\n        color: \"white\",\n        fontSize: \"15px\",\n    },\n}));\n\nexport const Copyright: FC = () => {\n    const classes = useStyles();\n    return (\n        <h5 data-test-id=\"copyright\" className=\"copyright\">\n            © {new Date().getFullYear()} Copyright:\n            <a\n                className=\"underline\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/alexiszamanidis\"\n                target=\"_blank\"\n            >\n                <b className={classes.a} data-test-id=\"copyright-name\">\n                    {\" Alexis Zamanidis\"}\n                </b>\n            </a>\n        </h5>\n    );\n};\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n    return (\n        <Box data-test-id=\"footer\" className={classes.root} bgcolor=\"primary.main\">\n            <Copyright data-test-id=\"copyright-inside-footer\" />\n        </Box>\n    );\n};\n\nexport default Footer;\n","import { makeStyles } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport Footer from \"../Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n    },\n    main: {\n        paddingBottom: theme.spacing(3),\n    },\n    footer: {\n        marginTop: \"auto\",\n    },\n    tabs: {\n        color: \"white\",\n    },\n}));\n\nconst Layout: FC = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <div data-test-id=\"layout\" className={classes.root}>\n            <div data-test-id=\"children\" className={classes.main}>\n                {children}\n            </div>\n            <div data-test-id=\"footer\" className={classes.footer}>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;\n","import { FC } from \"react\";\nimport MyTabs from \"../components/Tabs\";\nimport Layout from \"../components/Layout\";\n\nconst App: FC = () => {\n    return (\n        <Layout data-test-id=\"layout\">\n            <MyTabs data-test-id=\"tabs\" />\n        </Layout>\n    );\n};\n\nexport default App;\n","import { createMuiTheme, colors } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: colors.common.white,\n            paper: colors.common.white,\n        },\n        primary: {\n            main: \"#3F51B5\",\n        },\n        secondary: {\n            main: \"#fff\",\n        },\n    },\n    typography: {\n        fontFamily: [\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n        fontSize: 15,\n    },\n});\n\nexport default theme;\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        \"@global\": {\n            \"*\": {\n                boxSizing: \"border-box\",\n            },\n            html: {\n                height: \"100%\",\n                width: \"100%\",\n            },\n            body: {\n                backgroundColor: \"#f4f6f8\",\n                height: \"100%\",\n                width: \"100%\",\n            },\n            a: {\n                textDecoration: \"none\",\n            },\n        },\n    })\n);\n\nconst GlobalStyles = () => {\n    useStyles();\n\n    return null;\n};\n\nexport default GlobalStyles;\n","import { FC } from \"react\";\nimport theme from \"../theme\";\nimport { ProviderPros } from \"./types\";\nimport GlobalStyles from \"../globalStyles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nconst Providers: FC<ProviderPros> = ({ children }) => {\n    return (\n        <QueryClientProvider client={queryClient}>\n            <ThemeProvider theme={theme}>\n                <GlobalStyles />\n                {children}\n            </ThemeProvider>\n        </QueryClientProvider>\n    );\n};\n\nexport default Providers;\n","import \"./index.css\";\nimport App from \"./pages\";\nimport ReactDOM from \"react-dom\";\nimport Providers from \"./providers\";\n\nReactDOM.render(\n    <Providers>\n        <App />\n    </Providers>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}