{"version":3,"sources":["components/config.tsx","components/AboutMe/Skills/config.tsx","components/AboutMe/Skills/index.tsx","utilities/index.tsx","services/GitHub.tsx","components/AboutMe/LeftPaper/index.tsx","components/AboutMe/RightPaper/config.tsx","components/AboutMe/RightPaper/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/CardComponent/index.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/index.tsx","components/Footer/index.tsx","components/index.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","mainColumns","name","skillFields","skills","link","skillRows","defaultSkill","languages","dataScience","frontend","backend","databases","ide","otherTools","i","length","newSkillObject","language","push","skillsToRows","Skills","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","map","column","index","TableCell","align","toUpperCase","TableBody","skill","field","href","rel","target","calculateAge","dateOfBirth","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","basePath","this","username","axios","get","useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","height","avatar","margin","width","title","primary","item","LeftPaper","classes","useState","avatar_url","location","bio","userData","setUserData","error","setError","useEffect","GitHub","getUserData","then","data","catch","Grid","xs","sm","className","Alert","severity","Avatar","alt","src","passionateAbout","hobbies","contacts","buttons","RightPaper","contact","button","AboutMe","Container","maxWidth","container","style","marginTop","marginBottom","CardComponent","description","stargazers_count","forks_count","Card","CardContent","Typography","gutterBottom","CardActions","Button","size","marginRight","root","grid","gitHubRepositories","setGitHubRepositories","loading","setLoading","GitHubService","getUserRepositories","repo","md","id","Portfolio","Footer","App","value","setValue","AppBar","position","Tabs","onChange","event","newValue","variant","tabItem","Tab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb2b1a08.chunk.js","sourcesContent":["import { AccountBox, Work } from \"@material-ui/icons\";\n\ninterface TabItem {\n    label: string;\n    icon: JSX.Element;\n}\n\nconst tabItems: TabItem[] = [\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\n    { label: \"PORTFOLIO\", icon: <Work /> },\n];\n\nexport { tabItems };\n","interface MainColumn {\n    name: string;\n}\n\nconst mainColumns: MainColumn[] = [\n    { name: \"Languages\" },\n    { name: \"Data Science\" },\n    { name: \"Frontend\" },\n    { name: \"Backend\" },\n    { name: \"Databases\" },\n    { name: \"IDE\" },\n    { name: \"Other Tools\" },\n];\n\ninterface MainSkillFields {\n    name: string;\n}\n\nconst skillFields: MainSkillFields[] = [\n    { name: \"language\" },\n    { name: \"dataScience\" },\n    { name: \"frontend\" },\n    { name: \"backend\" },\n    { name: \"databases\" },\n    { name: \"ide\" },\n    { name: \"otherTools\" },\n];\n\n// eslint-disable-next-line\ninterface Skill {\n    name: string;\n    link: string;\n}\n\nconst skills = {\n    languages: [\n        { name: \"C\", link: \"https://github.com/alexiszamanidis/conway_game_of_life\" },\n        { name: \"C++\", link: \"https://github.com/alexiszamanidis/sql_query_executor\" },\n        { name: \"Java\", link: \"https://gitlab.com/alexiszamanidis/spring_boot\" },\n    ],\n    dataScience: [\n        { name: \"Python\", link: \"https://github.com/alexiszamanidis/airbnb_data_analysis\" },\n    ],\n    frontend: [\n        { name: \"JavaScript\", link: \"#/\" },\n        { name: \"HTML\", link: \"#/\" },\n        { name: \"CSS\", link: \"#/\" },\n        { name: \"React JS\", link: \"https://github.com/alexiszamanidis/alexiszamanidis.github.io\" },\n    ],\n    backend: [{ name: \"Spring Boot\", link: \"https://gitlab.com/alexiszamanidis/spring_boot\" }],\n    databases: [{ name: \"MySQL\", link: \"\" }],\n    ide: [\n        { name: \"VS Code\", link: \"#/\" },\n        { name: \"Eclipse\", link: \"#/\" },\n    ],\n    otherTools: [\n        { name: \"Git\", link: \"https://github.com/alexiszamanidis\" },\n        { name: \"Bash\", link: \"https://github.com/alexiszamanidis/.ubuntu_bootstrap\" },\n        { name: \"Docker\", link: \"#/\" },\n        { name: \"Lucidchart\", link: \"#/\" },\n        { name: \"Balsamiq\", link: \"#/\" },\n    ],\n};\n\nconst skillsToRows = () => {\n    let skillRows = [];\n    let defaultSkill = { name: \"\", link: \"#/\" };\n    const { languages, dataScience, frontend, backend, databases, ide, otherTools } = skills;\n    for (let i = 0; ; i++) {\n        if (\n            !(\n                languages.length > i ||\n                dataScience.length > i ||\n                frontend.length > i ||\n                backend.length > i ||\n                databases.length > i ||\n                ide.length > i ||\n                otherTools.length > i\n            )\n        ) {\n            return skillRows;\n        }\n        let newSkillObject = {\n            language: languages.length > i ? languages[i] : defaultSkill,\n            dataScience: dataScience.length > i ? dataScience[i] : defaultSkill,\n            frontend: frontend.length > i ? frontend[i] : defaultSkill,\n            backend: backend.length > i ? backend[i] : defaultSkill,\n            databases: databases.length > i ? databases[i] : defaultSkill,\n            ide: ide.length > i ? ide[i] : defaultSkill,\n            otherTools: otherTools.length > i ? otherTools[i] : defaultSkill,\n        };\n        skillRows.push(newSkillObject);\n    }\n};\n\nconst skillRows = skillsToRows();\n\nexport { mainColumns, skillFields, skillRows };\n","import React, { FC } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { mainColumns, skillFields, skillRows } from \"./config\";\n\nconst Skills: FC = () => {\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {mainColumns.map((column, index) => (\n                            <TableCell key={index} align=\"center\">\n                                <b>{column.name.toUpperCase()}</b>\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {skillRows.map((skill: any, index) => {\n                        return (\n                            <TableRow key={index}>\n                                {skillFields.map((field: any, index) => {\n                                    return (\n                                        <TableCell key={index} align=\"center\">\n                                            {skill[field.name].link !== \"#/\" ? (\n                                                <a\n                                                    href={skill[field.name].link}\n                                                    rel=\"noreferrer\"\n                                                    target=\"_blank\"\n                                                >\n                                                    {skill[field.name].name}\n                                                </a>\n                                            ) : (\n                                                skill[field.name].name\n                                            )}\n                                        </TableCell>\n                                    );\n                                })}\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default Skills;\n","export const trimString = (string: string, limit: number): string => {\n    return string != null\n        ? string.length <= limit\n            ? string\n            : string.substring(0, limit) + \"...\"\n        : \"\";\n};\n\nexport const calculateAge = (dateOfBirth: string): number => {\n    let todayDate = new Date();\n    let todayDay = todayDate.getDate();\n    let todayMonth = todayDate.getMonth();\n    let todayYear = todayDate.getFullYear();\n\n    let birthDate = new Date(dateOfBirth);\n    let birthDay = birthDate.getDate();\n    let birthMonth = birthDate.getMonth();\n    let birthYear = birthDate.getFullYear();\n\n    let age = todayYear - birthYear;\n\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\n    else return age - 1;\n};\n","import axios from \"axios\";\n\n// const clientId = \"\";\n// const clientSecret = \"\";\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\n\nclass GitHubService {\n    basePath: string;\n\n    constructor() {\n        this.basePath = \"https://api.github.com\";\n    }\n\n    getUserData(username: string) {\n        return axios.get(this.basePath + \"/users/\" + username);\n    }\n\n    getUserRepositories(username: string) {\n        return axios.get(this.basePath + \"/users/\" + username + \"/repos\");\n    }\n}\n\nexport default new GitHubService();\n","import React, { FC, useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { calculateAge } from \"../../../utilities\";\nimport GitHub from \"../../../services/GitHub\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"90%\",\n    },\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        margin: \"15px\",\n    },\n}));\n\ninterface UserDataFields {\n    name: string;\n    avatar_url: string;\n    location: string;\n    bio: string;\n}\n\nconst LeftPaper: FC = () => {\n    const classes = useStyles();\n\n    const [userData, setUserData] = useState<UserDataFields>({\n        name: \"\",\n        avatar_url: \"\",\n        location: \"\",\n        bio: \"\",\n    });\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        GitHub.getUserData(\"alexiszamanidis\")\n            .then(({ data }) => {\n                setUserData({\n                    name: data.name,\n                    avatar_url: data.avatar_url,\n                    location: data.location,\n                    bio: data.bio,\n                });\n            })\n            .catch((error) => {\n                setError(error);\n            });\n    }, []);\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n                {error === true ? (\n                    <Alert severity=\"error\">Something happened</Alert>\n                ) : (\n                    <div>\n                        <Avatar\n                            alt=\"Alexis Zamanidis\"\n                            src={userData.avatar_url}\n                            className={classes.avatar}\n                        />\n                        <div className={classes.item + \" personal\"}>\n                            <i className={classes.title + \" fa fa-user\"}></i>\n                            {userData.name} <i className={classes.title + \" fa fa-map-marker\"}></i>\n                            {userData.location}{\" \"}\n                            <i className={classes.title + \" fa fa-birthday-cake\"}></i>\n                            {calculateAge(\"1998-01-20\")}\n                        </div>\n                        <div className={classes.item}>\n                            <b className={classes.title}>Summary</b> <br />\n                            {userData.bio}\n                        </div>\n                    </div>\n                )}\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default LeftPaper;\n","interface PassionateAboutItem {\n    name: string;\n}\n\nconst passionateAbout: PassionateAboutItem[] = [\n    {\n        name: \"Full Stack Development mainly with React JS, Spring Boot and MySQL\",\n    },\n    {\n        name: \"Machine Learning - Data Mining\",\n    },\n    {\n        name: \"Parallel Programming\",\n    },\n];\n\ninterface HobbyItem {\n    name: string;\n}\n\nconst hobbies: HobbyItem[] = [\n    {\n        name: \"Playing Football and Basketball\",\n    },\n    {\n        name: \"Calisthenics Workout\",\n    },\n];\n\ninterface ContactItem {\n    icon: string;\n    name: string;\n    link: string;\n}\n\nconst contacts: ContactItem[] = [\n    {\n        icon: \"fa fa-phone\",\n        name: \"+30 698-044-3908\",\n        link: \"tel:+30698-044-3908\",\n    },\n    {\n        icon: \"fa fa-envelope\",\n        name: \"alexiszamanidis@outlook.com\",\n        link: \"mailto:alexiszamanidis@outlook.com\",\n    },\n];\n\ninterface ButtonItem {\n    icon: string;\n    name: string;\n    link: string;\n}\n\nconst buttons: ButtonItem[] = [\n    {\n        icon: \"fa fa-file\",\n        name: \"CV\",\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\n    },\n    {\n        icon: \"fa fa-linkedin\",\n        name: \"LinkedIn\",\n        link: \"http://linkedin.com/in/alexiszamanidis\",\n    },\n    {\n        icon: \"fa fa-github\",\n        name: \"GitHub\",\n        link: \"https://github.com/alexiszamanidis\",\n    },\n];\n\nexport { passionateAbout, hobbies, contacts, buttons };\n","import React, { FC } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { passionateAbout, hobbies, contacts, buttons } from \"./config\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"90%\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        margin: \"15px\",\n    },\n}));\n\nconst RightPaper: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n                <div className={classes.item}>\n                    <b className={classes.title}>Passionate about</b>\n                    {passionateAbout.map((item, index) => {\n                        return (\n                            <div key={index}>\n                                {item.name} <br />\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={classes.item}>\n                    <b className={classes.title}>Hobbies</b>\n                    {hobbies.map((item, index) => {\n                        return (\n                            <div key={index}>\n                                {item.name} <br />\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={classes.item}>\n                    <b className={classes.title}>Contact</b>\n                    {contacts.map((contact, index) => {\n                        return (\n                            <a key={index} href={contact.link} target=\"_blank\" rel=\"noreferrer\">\n                                <div className=\"contact\">\n                                    <i className={classes.title + \" \" + contact.icon}></i>\n                                    {contact.name}\n                                </div>\n                            </a>\n                        );\n                    })}\n                </div>\n                <div className={classes.item}>\n                    {buttons.map((button, index) => {\n                        return (\n                            <a key={index} href={button.link} target=\"_blank\" rel=\"noreferrer\">\n                                <button className=\"button\">\n                                    <i className={button.icon}></i>\n                                    {button.name}\n                                </button>\n                            </a>\n                        );\n                    })}\n                </div>\n            </Paper>\n        </Grid>\n    );\n};\n\nexport default RightPaper;\n","import React, { FC } from \"react\";\nimport Skills from \"./Skills\";\nimport LeftPaper from \"./LeftPaper\";\nimport RightPaper from \"./RightPaper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nconst AboutMe: FC = () => {\n    return (\n        <Container maxWidth=\"md\">\n            <Grid container spacing={3} style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n                <LeftPaper />\n                <RightPaper />\n            </Grid>\n            <Skills />\n        </Container>\n    );\n};\n\nexport default AboutMe;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction CardComponent({\n    name,\n    description,\n    language,\n    stargazers_count,\n    forks_count,\n}: {\n    name: string;\n    description: string;\n    language: string;\n    stargazers_count: number;\n    forks_count: number;\n}) {\n    return (\n        <Card style={{ height: \"100%\" }}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    {name}\n                </Typography>\n                <Typography>{description}</Typography>\n                <Typography>\n                    <b>language</b>: {language} <i className={\"fa fa-star\"}></i>\n                    {` ${stargazers_count} `}\n                    <i className=\"fa fa-code-fork\"></i>\n                    {` ${forks_count} `}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\">\n                    <i style={{ marginRight: \"5px\" }} className={\"fa fa-github\"}></i>\n                    View on GitHub\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default CardComponent;\n","import React, { FC, useState, useEffect } from \"react\";\nimport GitHubService from \"../../../services/GitHub\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CardComponent from \"./CardComponent\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"300px\",\n        margin: \"30px\",\n    },\n    grid: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n    icon: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n    },\n});\n\ninterface GitHubRepository {\n    id: number;\n    name: string;\n    description: string;\n    language: string;\n    stargazers_count: number;\n    forks_count: number;\n}\n\nconst GitHub: FC = () => {\n    const [gitHubRepositories, setGitHubRepositories] = useState<GitHubRepository[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<boolean | object>(false);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        GitHubService.getUserRepositories(\"alexiszamanidis\")\n            .then(({ data }) => {\n                setGitHubRepositories(data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setError(error);\n                setLoading(false);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div className={`${classes.icon} fa-3x`}>\n                <i className={\"fa fa-github\" + (loading === true ? \" fa-spin\" : \"\")}></i>\n            </div>\n            {error && <Alert severity=\"error\">Something happened</Alert>}\n            <Grid container spacing={3} className={classes.grid}>\n                {gitHubRepositories.map((repo) => {\n                    return (\n                        <Grid item xs={12} sm={4} md={4} key={repo.id}>\n                            <CardComponent\n                                name={repo.name}\n                                description={repo.description}\n                                language={repo.language}\n                                stargazers_count={repo.stargazers_count}\n                                forks_count={repo.forks_count}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </div>\n    );\n};\n\nexport default GitHub;\n","import React, { FC } from \"react\";\nimport GitHub from \"./GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Portfolio: FC = () => {\n    return (\n        <Container>\n            <GitHub />\n        </Container>\n    );\n};\n\nexport default Portfolio;\n","import React, { FC } from \"react\";\n\nconst Footer: FC = () => {\n    return (\n        <div className=\"footer\">\n            <p>\n                &copy; {new Date().getFullYear()} Copyright:{\" \"}\n                <a\n                    rel=\"noopener noreferrer\"\n                    href=\"https://github.com/alexiszamanidis\"\n                    target=\"_blank\"\n                >\n                    <b>{\" alexiszamanidis\"}</b>\n                </a>\n            </p>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React, { FC, useState } from \"react\";\n\nimport { tabItems } from \"./config\";\nimport AboutMe from \"./AboutMe\";\nimport Portfolio from \"./Portfolio\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Footer from \"./Footer\";\n\nconst App: FC = () => {\n    const [value, setValue] = useState<number>(0);\n\n    const showTabContent = () => {\n        if (value === 0) return <AboutMe />;\n        else if (value === 1) return <Portfolio />;\n        else return null;\n    };\n\n    return (\n        <div>\n            <div className=\"content\">\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={value}\n                        onChange={(event, newValue) => setValue(newValue)}\n                        variant=\"fullWidth\"\n                    >\n                        {tabItems.map((tabItem, index) => {\n                            return <Tab key={index} {...tabItem} />;\n                        })}\n                    </Tabs>\n                </AppBar>\n                {showTabContent()}\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}