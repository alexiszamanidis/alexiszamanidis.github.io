{"version":3,"sources":["components/Tabs/config.tsx","components/AboutMe/Contact/config.tsx","components/AboutMe/Contact/index.tsx","components/AboutMe/Hobbies/config.tsx","components/AboutMe/Hobbies/index.tsx","utilities/index.tsx","components/AboutMe/Personal/PersonalSkeleton/index.tsx","services/config.tsx","services/GitHub/GitHub.tsx","components/AboutMe/Personal/index.tsx","components/AboutMe/Education/config.tsx","components/AboutMe/Education/index.tsx","components/AboutMe/Experience/config.tsx","components/AboutMe/Experience/index.tsx","components/AboutMe/ButtonLinks/config.tsx","components/CustomButtonLink/index.tsx","components/AboutMe/ButtonLinks/index.tsx","components/AboutMe/PassionAbout/config.tsx","components/AboutMe/PassionAbout/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/Repositories/CardSkeleton/index.tsx","components/Portfolio/GitHub/Repositories/CardComponent/index.tsx","components/Portfolio/GitHub/Repositories/index.tsx","components/Portfolio/GitHub/Repositories/config.tsx","components/CustomHooks/useDebounce.tsx","components/Portfolio/GitHub/useGitHubFaIconSpinner.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/GitHub/filterHooks.tsx","components/Portfolio/index.tsx","components/Tabs/index.tsx","components/Tabs/useTabs.tsx","components/Footer/index.tsx","components/Layout/index.tsx","pages/index.tsx","theme/index.tsx","globalStyles/index.tsx","providers/index.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","contacts","name","link","useStyles","makeStyles","theme","title","color","palette","text","primary","list","padding","item","Contact","classes","Box","mb","fontWeight","className","Typography","variant","List","map","index","ListItem","Link","href","target","rel","component","display","hobbies","Hobbies","calculateAge","dateOfBirth","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","avatar","margin","width","spacing","height","marginBottom","personal","textAlign","bio","skeletonItem","marginRight","PersonalSkeleton","Fragment","Skeleton","alignItems","justifyContent","getOptions","baseUrl","endPoint","parameters","url","URLSearchParams","toString","method","headers","Accept","Authorization","process","basePath","this","username","axios","repository","flexDirection","info","Personal","useQuery","GitHub","getUserData","then","data","refetchOnMount","cacheTime","Infinity","isLoading","isError","Alert","severity","Avatar","alt","src","avatar_url","location","education","university","duration","description","itemName","itemDescription","itemLocation","itemDuration","itemLinkIcon","itemSlash","Education","useTheme","matches","useMediaQuery","breakpoints","up","experience","from","to","jobTitle","company","typeOfEmployee","Experience","buttons","button","CustomButtonLink","size","data-test-id","Button","startIcon","root","ButtonLinks","passionateAbout","PassionateAbout","marginTop","paper","secondary","AboutMe","Container","maxWidth","Paper","skeleton","CardSkeleton","timeout","Grow","in","Card","CardContent","gutterBottom","CardActions","style","marginLeft","details","CardComponent","language","stargazers_count","forks_count","html_url","grid","Repositories","repositories","loading","Grid","container","Array","skeletonIndex","sm","md","lg","repo","id","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","fontSize","searchFields","search","select","error","GitHubService","getUserRepositories","setSearch","handleSearch","e","useSearch","debouncedSearch","selectedLanguage","setSelectedLanguage","languages","useMemo","undefined","uniqueLanguages","Set","filter","handleLanguage","useUniqueLanguages","computedData","tempRepositories","length","toLowerCase","includes","useFilteredData","gitHubFaIcon","useGitHubFaIconSpinner","Tooltip","placement","TextField","onChange","FormControl","InputLabel","Select","native","Portfolio","tabs","MyTabs","setValue","showTabContent","handleTabs","event","newValue","useTabs","bgcolor","Tabs","TabIndicatorProps","tabItem","Tab","a","Copyright","Footer","minHeight","main","paddingBottom","footer","Layout","children","App","createMuiTheme","background","default","colors","common","white","typography","fontFamily","join","createStyles","boxSizing","html","body","backgroundColor","textDecoration","GlobalStyles","queryClient","QueryClient","Providers","QueryClientProvider","client","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc688626.chunk.js","sourcesContent":["import { TabItem } from \"./types\";\r\nimport { AccountBox, Work } from \"@material-ui/icons\";\r\n\r\nconst tabItems: TabItem[] = [\r\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\r\n    { label: \"PORTFOLIO\", icon: <Work /> },\r\n];\r\n\r\nexport { tabItems };\r\n","import { ContactItem } from \"./types\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst contacts: ContactItem[] = [\r\n    {\r\n        icon: <PhoneIcon />,\r\n        name: \"+30 698-044-3908\",\r\n        link: \"tel:+30698-044-3908\",\r\n    },\r\n    {\r\n        icon: <MailIcon />,\r\n        name: \"alexiszamanidis@outlook.com\",\r\n        link: \"mailto:alexiszamanidis@outlook.com\",\r\n    },\r\n];\r\n\r\nexport { contacts };\r\n","import { FC } from \"react\";\r\nimport { contacts } from \"./config\";\r\nimport { Box, Link, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    list: {\r\n        padding: \"0px 0px 0px 0px\",\r\n    },\r\n    item: {\r\n        padding: \"0px 0px 0px 0px\",\r\n        color: theme.palette.text.primary,\r\n    },\r\n    link: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst Contact: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box mb={5}>\r\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                <Typography variant=\"h6\">Contact</Typography>\r\n            </Box>\r\n            <List className={classes.list}>\r\n                {contacts.map((item, index) => {\r\n                    return (\r\n                        <ListItem key={index} className={classes.item}>\r\n                            <Link\r\n                                href={item.link}\r\n                                className={classes.link}\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                            >\r\n                                <Typography component={\"span\"}>\r\n                                    <Box display=\"flex\">\r\n                                        {item.icon}\r\n                                        {item.name}\r\n                                    </Box>\r\n                                </Typography>\r\n                            </Link>\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import { HobbyItem } from \"./types\";\r\n\r\nconst hobbies: HobbyItem[] = [\r\n    {\r\n        name: \"Playing Football and Basketball\",\r\n    },\r\n    {\r\n        name: \"Calisthenics Workout\",\r\n    },\r\n];\r\n\r\nexport { hobbies };\r\n","import { FC } from \"react\";\r\nimport { hobbies } from \"./config\";\r\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    list: {\r\n        padding: \"0px 0px 0px 0px\",\r\n    },\r\n    item: {\r\n        padding: \"0px 0px 0px 0px\",\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst Hobbies: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box mb={5}>\r\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                <Typography variant=\"h6\">Hobbies</Typography>\r\n            </Box>\r\n            <List className={classes.list}>\r\n                {hobbies.map((item, index) => {\r\n                    return (\r\n                        <ListItem key={index} className={classes.item}>\r\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Hobbies;\r\n","export const trimString = (string: string | null, limit: number): string => {\r\n    return string !== null\r\n        ? string.length <= limit\r\n            ? string\r\n            : string.substring(0, limit) + \"...\"\r\n        : \"\";\r\n};\r\n\r\nexport const calculateAge = (dateOfBirth: string): number => {\r\n    let todayDate = new Date();\r\n    let todayDay = todayDate.getDate();\r\n    let todayMonth = todayDate.getMonth();\r\n    let todayYear = todayDate.getFullYear();\r\n\r\n    let birthDate = new Date(dateOfBirth);\r\n    let birthDay = birthDate.getDate();\r\n    let birthMonth = birthDate.getMonth();\r\n    let birthYear = birthDate.getFullYear();\r\n\r\n    let age = todayYear - birthYear;\r\n\r\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\r\n    else return age - 1;\r\n};\r\n\r\nexport const findByDataTestIdAttribute = (component: any, attribute: string) => {\r\n    const wrapper = component.find(`[data-test-id=\"${attribute}\"]`);\r\n    return wrapper;\r\n};\r\n","import React, { FC } from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        margin: \"auto\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n        marginBottom: \"15px\",\r\n    },\r\n    personal: {\r\n        textAlign: \"center\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    item: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    bio: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    skeletonItem: {\r\n        marginRight: \"2px\",\r\n    },\r\n}));\r\n\r\nconst PersonalSkeleton: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Skeleton className={classes.avatar} variant=\"circle\" width={250} height={250} />\r\n            <div className={classes.personal}>\r\n                <div className={classes.item + \" personal\"}>\r\n                    <Typography component={\"span\"}>\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                            <Skeleton\r\n                                className={classes.skeletonItem}\r\n                                variant=\"circle\"\r\n                                width={20}\r\n                                height={20}\r\n                            />\r\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\r\n                            <Skeleton\r\n                                className={classes.skeletonItem}\r\n                                variant=\"circle\"\r\n                                width={20}\r\n                                height={20}\r\n                            />\r\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\r\n                            <Skeleton\r\n                                className={classes.skeletonItem}\r\n                                variant=\"circle\"\r\n                                width={20}\r\n                                height={20}\r\n                            />\r\n                            <Skeleton className={classes.skeletonItem} width={\"10%\"} />\r\n                        </Box>\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                <Typography variant=\"h6\">\r\n                    <Skeleton className={classes.skeletonItem} width={\"20%\"} />\r\n                    <Skeleton />\r\n                    <Skeleton />\r\n                    <Skeleton width={\"50%\"} />\r\n                </Typography>\r\n            </Box>\r\n            <Typography className={classes.bio}></Typography>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PersonalSkeleton;\r\n","export const getOptions = (baseUrl: string, endPoint: string, parameters?: any): object => {\r\n    return {\r\n        url: `${baseUrl}${endPoint}?` + new URLSearchParams(parameters).toString(),\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/vnd.github.v3+json\",\r\n            Authorization: `Token ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`,\r\n        },\r\n    };\r\n};\r\n","import axios from \"axios\";\r\nimport { getOptions } from \"../config\";\r\n\r\n// const clientId = \"\";\r\n// const clientSecret = \"\";\r\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\r\n\r\nclass GitHubService {\r\n    basePath: string;\r\n\r\n    constructor() {\r\n        this.basePath = \"https://api.github.com\";\r\n    }\r\n\r\n    getUserData(username: string) {\r\n        return axios(getOptions(`${this.basePath}`, `/users/${username}`));\r\n    }\r\n\r\n    getUserRepositories(username: string) {\r\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/repos`));\r\n    }\r\n\r\n    getRepositoryTopics(username: string, repository: string) {\r\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/${repository}/topics`));\r\n    }\r\n}\r\n\r\nexport default new GitHubService();\r\n","import React, { FC } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { calculateAge } from \"../../../utilities\";\r\nimport PersonalSkeleton from \"./PersonalSkeleton\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GitHub from \"../../../services/GitHub/GitHub\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport CakeIcon from \"@material-ui/icons/Cake\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        margin: \"auto\",\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n        marginBottom: \"15px\",\r\n    },\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    bio: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    personal: {\r\n        marginBottom: \"30px\",\r\n        color: theme.palette.text.primary,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:450px)\"]: {\r\n            flexDirection: \"row\",\r\n        },\r\n    },\r\n    info: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n}));\r\n\r\nconst Personal: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    const { isLoading, isError, data } = useQuery(\r\n        \"gitHubUserData\",\r\n        () => GitHub.getUserData(\"alexiszamanidis\").then(({ data }) => data),\r\n        { refetchOnMount: false, cacheTime: Infinity }\r\n    );\r\n\r\n    return (\r\n        <Box mb={5}>\r\n            {isLoading ? (\r\n                <PersonalSkeleton />\r\n            ) : isError ? (\r\n                <Alert severity=\"error\">Something happened</Alert>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Avatar\r\n                        alt=\"Alexis Zamanidis\"\r\n                        src={data.avatar_url}\r\n                        className={classes.avatar}\r\n                    />\r\n                    <div className={classes.personal}>\r\n                        <div className={classes.info}>\r\n                            <PersonIcon />\r\n                            <Typography>{data.name}</Typography>\r\n                        </div>\r\n                        <div className={classes.info}>\r\n                            <LocationOnIcon />\r\n                            <Typography>{data.location}</Typography>\r\n                        </div>\r\n                        <div className={classes.info}>\r\n                            <CakeIcon />\r\n                            <Typography>{calculateAge(\"1998-01-20\")}</Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                        <Typography variant=\"h6\">Summary</Typography>\r\n                    </Box>\r\n                    <Typography className={classes.bio}>{data.bio}</Typography>\r\n                </React.Fragment>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Personal;\r\n","import { EducationItem } from \"./types\";\r\n\r\nconst education: EducationItem[] = [\r\n    {\r\n        university: \"National & Kapodistrian University of Athens\",\r\n        duration: \"Oct 2016 - Feb 2021\",\r\n        description:\r\n            \"B.Sc. in Computer Science - Specializations: Software, Data & Knowledge Management.\",\r\n        location: \"Athens, Greece\",\r\n        link: \"https://www.di.uoa.gr/\",\r\n    },\r\n];\r\n\r\nexport { education };\r\n","import { FC } from \"react\";\r\nimport { education } from \"./config\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, Link, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    item: {\r\n        marginRight: \"5px\",\r\n    },\r\n    itemName: {\r\n        marginRight: \"5px\",\r\n    },\r\n    itemDescription: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    itemLocation: {\r\n        marginRight: \"5px\",\r\n    },\r\n    itemDuration: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    itemLinkIcon: {\r\n        color: \"black\",\r\n    },\r\n    itemSlash: {\r\n        display: \"none\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:960px)\"]: {\r\n            display: \"block\",\r\n            marginRight: \"5px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst Education: FC = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Box mb={5}>\r\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                <Typography variant=\"h6\">Education</Typography>\r\n            </Box>\r\n            {education.map((item, index) => {\r\n                return (\r\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection={matches ? \"row\" : \"column\"}\r\n                            justifyContent=\"space-between\"\r\n                        >\r\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\r\n                                <Typography color=\"primary\" className={classes.itemName}>\r\n                                    {item.university}\r\n                                </Typography>\r\n                                <Box display=\"flex\" flexDirection=\"row\">\r\n                                    <Typography className={classes.itemSlash}>{\" | \"}</Typography>\r\n                                    <Typography className={classes.itemLocation}>\r\n                                        {item.location}\r\n                                    </Typography>\r\n                                    <Link href={item.link} target=\"_blank\" rel=\"noreferrer\">\r\n                                        <LinkIcon className={classes.itemLinkIcon} />\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n                            <Typography className={classes.itemDuration}>\r\n                                {item.duration}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Typography className={classes.itemDescription}>\r\n                            {item.description}\r\n                        </Typography>\r\n                    </Box>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import { ExperienceItem } from \"./types\";\r\n\r\nconst experience: ExperienceItem[] = [\r\n    {\r\n        from: \"Oct 2020\",\r\n        to: \"April 2021\",\r\n        jobTitle: \"Full Stack Developer, Intern\",\r\n        company: \"ITML\",\r\n        location: \"Athens, Greece\",\r\n        typeOfEmployee: \"Remote Full-Time\",\r\n        description:\r\n            \"I built a Web Application which will be used by Doctors in their daily life  with main functionalities of automating Visits, Prescriptions and Referrals. \" +\r\n            \"But also it has other very useful functionalities such as Calendar, Pdf Generator for handwritten Prescriptions, Medicines Statistics. \" +\r\n            \"Its basic functionality is based on the API provided by IDIKA which is the official provider of e-Prescription in Greece.\",\r\n        link: null,\r\n    },\r\n];\r\n\r\nexport { experience };\r\n","import { FC } from \"react\";\r\nimport { experience } from \"./config\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    item: {\r\n        marginRight: \"5px\",\r\n    },\r\n    itemDescription: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    itemDuration: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    itemSlash: {\r\n        display: \"none\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:960px)\"]: {\r\n            display: \"block\",\r\n            marginRight: \"5px\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst Experience: FC = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    return (\r\n        <Box mb={5}>\r\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                <Typography variant=\"h6\">Experience</Typography>\r\n            </Box>\r\n            {experience.map((item, index) => {\r\n                return (\r\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection={matches ? \"row\" : \"column\"}\r\n                            justifyContent=\"space-between\"\r\n                        >\r\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\r\n                                <Typography\r\n                                    color=\"primary\"\r\n                                    className={classes.item}\r\n                                >{`${item.jobTitle} `}</Typography>\r\n                                <Typography className={classes.itemSlash}>{\" | \"}</Typography>\r\n                                <Typography>{`${item.company} - ${item.location} (${item.typeOfEmployee})`}</Typography>\r\n                            </Box>\r\n                            <Typography className={classes.itemDuration}>\r\n                                {item.from} - {item.to}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Typography className={classes.itemDescription}>\r\n                            {item.description}\r\n                        </Typography>\r\n                    </Box>\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Experience;\r\n","import { ButtonItem } from \"./types\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\nconst buttons: ButtonItem[] = [\r\n    {\r\n        text: \"CV\",\r\n        icon: <ReceiptIcon />,\r\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\r\n    },\r\n    {\r\n        text: \"LinkedIn\",\r\n        icon: <LinkedInIcon />,\r\n        link: \"http://linkedin.com/in/alexiszamanidis\",\r\n    },\r\n    {\r\n        text: \"GitHub\",\r\n        icon: <GitHubIcon />,\r\n        link: \"https://github.com/alexiszamanidis\",\r\n    },\r\n];\r\n\r\nexport { buttons };\r\n","import { FC } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { CustomButtonLinkProps } from \"./types\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        margin: \"5px 5px 5px 5px\",\r\n    },\r\n});\r\n\r\nconst CustomButtonLink: FC<CustomButtonLinkProps> = ({ link, size, icon, text }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <a data-test-id=\"custom-button-link-a\" href={link} target=\"_blank\" rel=\"noreferrer\">\r\n            <Button\r\n                data-test-id=\"custom-button-link-button\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                size={size}\r\n                startIcon={icon}\r\n                className={classes.button}\r\n            >\r\n                {text}\r\n            </Button>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default CustomButtonLink;\r\n","import { FC } from \"react\";\r\nimport { buttons } from \"./config\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport CustomButtonLink from \"../../CustomButtonLink\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\",\r\n    },\r\n});\r\n\r\nconst ButtonLinks: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box mb={3} className={classes.root}>\r\n            {buttons.map((button, index) => {\r\n                return (\r\n                    <CustomButtonLink\r\n                        key={index}\r\n                        link={button.link}\r\n                        size=\"medium\"\r\n                        icon={button.icon}\r\n                        text={button.text}\r\n                    />\r\n                );\r\n            })}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ButtonLinks;\r\n","import { PassionateAboutItem } from \"./types\";\r\n\r\nconst passionateAbout: PassionateAboutItem[] = [\r\n    {\r\n        name: \"Full Stack Development mainly with React.js, Spring Boot and MySQL\",\r\n    },\r\n    {\r\n        name: \"Machine Learning - Data Mining\",\r\n    },\r\n    {\r\n        name: \"Parallel Programming\",\r\n    },\r\n];\r\n\r\nexport { passionateAbout };\r\n","import { FC } from \"react\";\r\nimport { passionateAbout } from \"./config\";\r\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    list: {\r\n        padding: \"0px 0px 0px 0px\",\r\n    },\r\n    item: {\r\n        padding: \"0px 0px 0px 0px\",\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst PassionateAbout: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box mb={5}>\r\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\r\n                <Typography variant=\"h6\">Passionate About</Typography>\r\n            </Box>\r\n            <List className={classes.list}>\r\n                {passionateAbout.map((item, index) => {\r\n                    return (\r\n                        <ListItem key={index} className={classes.item}>\r\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PassionateAbout;\r\n","import { FC } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport Hobbies from \"./Hobbies\";\r\nimport Personal from \"./Personal\";\r\nimport Education from \"./Education\";\r\nimport Experience from \"./Experience\";\r\nimport ButtonLinks from \"./ButtonLinks\";\r\nimport PassionateAbout from \"./PassionAbout\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: \"25px\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        color: theme.palette.text.secondary,\r\n        height: \"100%\",\r\n    },\r\n}));\r\n\r\nconst AboutMe: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container data-test-id=\"about-me\" maxWidth=\"md\" className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Personal data-test-id=\"personal\" />\r\n                <Education data-test-id=\"education\" />\r\n                <Experience data-test-id=\"experience\" />\r\n                <PassionateAbout data-test-id=\"passionate-about\" />\r\n                <Hobbies data-test-id=\"hobbies\" />\r\n                <Contact data-test-id=\"contact\" />\r\n                <ButtonLinks data-test-id=\"button-links\" />\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React, { FC } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { CardSkeletonProps } from \"./types\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles({\r\n    skeleton: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        height: \"100%\",\r\n    },\r\n    skeletonItem: {\r\n        marginRight: \"2px\",\r\n    },\r\n});\r\n\r\nconst CardSkeleton: FC<CardSkeletonProps> = ({ timeout }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grow in={true} timeout={timeout}>\r\n                <Card className={classes.skeleton}>\r\n                    <CardContent>\r\n                        <Typography component={\"span\"} color=\"textSecondary\" gutterBottom>\r\n                            <Skeleton width={\"70%\"} />\r\n                        </Typography>\r\n                        <Typography component={\"span\"}>\r\n                            <Skeleton />\r\n                            <Skeleton />\r\n                            <Skeleton />\r\n                            <Skeleton />\r\n                        </Typography>\r\n                        <Typography component={\"span\"}>\r\n                            <Box display=\"flex\" alignItems=\"center\">\r\n                                <Skeleton className={classes.skeletonItem} width={\"40%\"} />\r\n                                <Skeleton\r\n                                    className={classes.skeletonItem}\r\n                                    variant=\"circle\"\r\n                                    width={20}\r\n                                    height={20}\r\n                                />\r\n                                <Skeleton className={classes.skeletonItem} width={\"10%\"} />\r\n                                <Skeleton\r\n                                    className={classes.skeletonItem}\r\n                                    variant=\"circle\"\r\n                                    width={20}\r\n                                    height={20}\r\n                                />\r\n                                <Skeleton className={classes.skeletonItem} width={\"10%\"} />\r\n                            </Box>\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Skeleton width={\"70%\"} height={40} style={{ marginLeft: \"5px\" }} />\r\n                    </CardActions>\r\n                </Card>\r\n            </Grow>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CardSkeleton;\r\n","import { FC } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { CardComponentProps } from \"./types\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CustomButtonLink from \"../../../../CustomButtonLink\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport CodeSharpIcon from \"@material-ui/icons/CodeSharp\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        height: \"100%\",\r\n    },\r\n    details: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:1100px)\"]: {\r\n            flexDirection: \"row\",\r\n        },\r\n    },\r\n    info: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n});\r\n\r\nconst CardComponent: FC<CardComponentProps> = ({\r\n    name,\r\n    description,\r\n    language,\r\n    stargazers_count,\r\n    forks_count,\r\n    html_url,\r\n}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card data-test-id=\"card-component\" className={classes.root}>\r\n            <CardContent>\r\n                <Typography\r\n                    component={\"span\"}\r\n                    data-test-id=\"card-component-name\"\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                >\r\n                    <Box fontWeight={500}>{name}</Box>\r\n                </Typography>\r\n                <Typography component={\"span\"} data-test-id=\"card-component-description\">\r\n                    {description}\r\n                </Typography>\r\n                <Typography\r\n                    component={\"span\"}\r\n                    data-test-id=\"card-component-language-star-fork\"\r\n                    className={classes.details}\r\n                >\r\n                    <div className={classes.info}>\r\n                        <b>language</b>: {language}\r\n                    </div>\r\n                    <div className={classes.info}>\r\n                        <StarIcon />\r\n                        {` ${stargazers_count} `}\r\n                    </div>\r\n                    <div className={classes.info}>\r\n                        <CodeSharpIcon />\r\n                        {` ${forks_count} `}\r\n                    </div>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <CustomButtonLink\r\n                    data-test-id=\"card-component-custom-button-link\"\r\n                    link={html_url}\r\n                    size=\"small\"\r\n                    icon={<GitHubIcon />}\r\n                    text={\"View on GitHub\"}\r\n                />\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CardComponent;\r\n","import { FC } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardSkeleton from \"./CardSkeleton\";\r\nimport { Repo, RepoProps } from \"./types\";\r\nimport CardComponent from \"./CardComponent\";\r\nimport { numberOfSkeletons } from \"./config\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    grid: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n});\r\n\r\nconst Repositories: FC<RepoProps> = ({ repositories, loading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid data-test-id=\"repositories\" container spacing={3} className={classes.grid}>\r\n            {loading\r\n                ? [...Array(numberOfSkeletons)].map((skeleton, skeletonIndex) => {\r\n                      return (\r\n                          <Grid item sm={12} md={6} lg={4} key={skeletonIndex}>\r\n                              <CardSkeleton timeout={skeletonIndex * 500} />\r\n                          </Grid>\r\n                      );\r\n                  })\r\n                : repositories.map((repo: Repo) => {\r\n                      return (\r\n                          <Grid data-test-id=\"repository\" item sm={12} md={6} lg={4} key={repo.id}>\r\n                              <CardComponent\r\n                                  data-test-id=\"repository-card-component\"\r\n                                  name={repo.name}\r\n                                  description={repo.description}\r\n                                  language={repo.language}\r\n                                  stargazers_count={repo.stargazers_count}\r\n                                  forks_count={repo.forks_count}\r\n                                  html_url={repo.html_url}\r\n                              />\r\n                          </Grid>\r\n                      );\r\n                  })}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Repositories;\r\n","export const numberOfSkeletons: number = 4;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction useDebounce(value: string, delay: number) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;\r\n","import { useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    icon: {\r\n        fontSize: \"50px\",\r\n    },\r\n});\r\n\r\nexport const useGitHubFaIconSpinner = (isLoading: boolean): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const gitHubFaIcon = useMemo(() => {\r\n        return (\r\n            <div className={classes.root}>\r\n                <GitHubIcon className={`${classes.icon} ${isLoading ? \"spin\" : \"\"}`} />\r\n            </div>\r\n        );\r\n    }, [isLoading, classes]);\r\n\r\n    return gitHubFaIcon;\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport Repositories from \"./Repositories\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport useDebounce from \"../../CustomHooks/useDebounce\";\r\nimport GitHubService from \"../../../services/GitHub/GitHub\";\r\nimport { useGitHubFaIconSpinner } from \"./useGitHubFaIconSpinner\";\r\nimport { useFilteredData, useSearch, useUniqueLanguages } from \"./filterHooks\";\r\nimport { TextField, FormControl, InputLabel, Select, Tooltip } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"300px\",\r\n        margin: \"30px\",\r\n    },\r\n    searchFields: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:600px)\"]: {\r\n            flexDirection: \"row\",\r\n        },\r\n    },\r\n    search: {\r\n        width: \"100%\",\r\n        margin: \"5px 5px 5px 0px\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:600px)\"]: {\r\n            width: \"50%\",\r\n        },\r\n    },\r\n    select: {\r\n        width: \"100%\",\r\n        margin: \"5px 5px 5px 0px\",\r\n        // eslint-disable-next-line\r\n        [\"@media (min-width:600px)\"]: {\r\n            width: \"50%\",\r\n        },\r\n    },\r\n    error: {\r\n        marginTop: \"10px\",\r\n    },\r\n});\r\n\r\nconst GitHub: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    const { isLoading, isError, data } = useQuery(\r\n        \"gitHubRepositories\",\r\n        () => GitHubService.getUserRepositories(\"alexiszamanidis\").then(({ data }) => data),\r\n        { refetchOnMount: false, cacheTime: Infinity }\r\n    );\r\n\r\n    const { search, handleSearch } = useSearch();\r\n    const debouncedSearch = useDebounce(search, 500);\r\n    const { selectedLanguage, handleLanguage, languages } = useUniqueLanguages(data);\r\n    const { computedData } = useFilteredData(data, debouncedSearch, selectedLanguage);\r\n\r\n    const gitHubFaIcon = useGitHubFaIconSpinner(isLoading);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {gitHubFaIcon}\r\n            <div className={classes.searchFields}>\r\n                <Tooltip\r\n                    data-test-id=\"tooltip-search-text-field\"\r\n                    title=\"filter by repository name and description\"\r\n                    placement=\"top\"\r\n                >\r\n                    <TextField\r\n                        data-test-id=\"search-text-field\"\r\n                        label=\"Search\"\r\n                        variant=\"outlined\"\r\n                        className={classes.search}\r\n                        onChange={handleSearch}\r\n                        value={search}\r\n                    />\r\n                </Tooltip>\r\n                <FormControl\r\n                    data-test-id=\"select-form-control\"\r\n                    variant=\"outlined\"\r\n                    className={classes.select}\r\n                >\r\n                    <InputLabel data-test-id=\"select-input-label\">Language</InputLabel>\r\n                    <Select\r\n                        data-test-id=\"select\"\r\n                        native\r\n                        label=\"Language\"\r\n                        value={selectedLanguage}\r\n                        onChange={handleLanguage}\r\n                    >\r\n                        <option value=\"\" />\r\n                        {languages.map((language, index) => {\r\n                            return (\r\n                                <option key={index} value={language}>\r\n                                    {language}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            {isError ? (\r\n                <Alert className={classes.error} severity=\"error\">\r\n                    Something happened\r\n                </Alert>\r\n            ) : (\r\n                <Repositories\r\n                    data-test-id=\"repositories\"\r\n                    repositories={computedData}\r\n                    loading={isLoading}\r\n                />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GitHub;\r\n","import { Repo } from \"./types\";\r\nimport { useState, useMemo } from \"react\";\r\n\r\nexport const useSearch = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    };\r\n    return { search, setSearch, handleSearch };\r\n};\r\n\r\nexport const useUniqueLanguages = (data: Repo[]) => {\r\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\r\n    const handleLanguage = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n        setSelectedLanguage(e.target.value as string);\r\n    };\r\n\r\n    const languages = useMemo(() => {\r\n        if (data === undefined) return [];\r\n        let uniqueLanguages = new Set<string>(\r\n            data\r\n                .filter(\r\n                    ({ language }: { language: string | null }) =>\r\n                        language !== null && language !== \"\"\r\n                )\r\n                .map(({ language }: { language: string }) => language)\r\n        );\r\n        return Array.from(uniqueLanguages);\r\n    }, [data]);\r\n\r\n    return { selectedLanguage, setSelectedLanguage, handleLanguage, languages };\r\n};\r\n\r\nexport const useFilteredData = (\r\n    data: Repo[],\r\n    debouncedSearch: string,\r\n    selectedLanguage: string\r\n) => {\r\n    const computedData = useMemo(() => {\r\n        if (data === undefined) return [];\r\n        let tempRepositories = data;\r\n        if (debouncedSearch.length > 0) {\r\n            tempRepositories = tempRepositories.filter(\r\n                ({ name, description }: { name: string; description: string }) => {\r\n                    return (\r\n                        name.toString().toLowerCase().includes(debouncedSearch.toLowerCase()) ||\r\n                        description.toString().toLowerCase().includes(debouncedSearch.toLowerCase())\r\n                    );\r\n                }\r\n            );\r\n        }\r\n\r\n        if (selectedLanguage.length > 0) {\r\n            tempRepositories = tempRepositories.filter(\r\n                ({ language }: { language: string | null }) => {\r\n                    return language === selectedLanguage;\r\n                }\r\n            );\r\n        }\r\n\r\n        return tempRepositories;\r\n    }, [data, debouncedSearch, selectedLanguage]);\r\n\r\n    return { computedData };\r\n};\r\n","import { FC } from \"react\";\r\nimport GitHub from \"./GitHub\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst Portfolio: FC = () => {\r\n    return (\r\n        <Container data-test-id=\"card-portfolio\">\r\n            <GitHub data-test-id=\"github\" />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React, { FC } from \"react\";\r\nimport { tabItems } from \"./config\";\r\nimport { useTabs } from \"./useTabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    tabs: {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nconst MyTabs: FC = () => {\r\n    const classes = useStyles();\r\n\r\n    const { value, handleTabs, showTabContent } = useTabs();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box data-test-id=\"tabs\" bgcolor=\"primary.main\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleTabs}\r\n                    variant=\"fullWidth\"\r\n                    className={classes.tabs}\r\n                    TabIndicatorProps={{\r\n                        style: {\r\n                            height: \"5px\",\r\n                        },\r\n                    }}\r\n                >\r\n                    {tabItems.map((tabItem, index) => {\r\n                        return <Tab key={index} {...tabItem} />;\r\n                    })}\r\n                </Tabs>\r\n            </Box>\r\n            {showTabContent}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MyTabs;\r\n","import AboutMe from \"../AboutMe\";\r\nimport Portfolio from \"../Portfolio\";\r\nimport { useState, useMemo } from \"react\";\r\n\r\nexport const useTabs = () => {\r\n    const [value, setValue] = useState<number>(0);\r\n\r\n    const showTabContent: JSX.Element | null = useMemo(() => {\r\n        if (value === 0) return <AboutMe />;\r\n        else if (value === 1) return <Portfolio />;\r\n        else return null;\r\n    }, [value]);\r\n\r\n    const handleTabs = (event: any, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return { value, setValue, handleTabs, showTabContent };\r\n};\r\n","import { FC } from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(1, 1),\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    a: {\r\n        color: \"white\",\r\n        fontSize: \"15px\",\r\n    },\r\n}));\r\n\r\nexport const Copyright: FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <h5 data-test-id=\"copyright\" className=\"copyright\">\r\n            © {new Date().getFullYear()} Copyright:\r\n            <a\r\n                className=\"underline\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://github.com/alexiszamanidis\"\r\n                target=\"_blank\"\r\n            >\r\n                <b className={classes.a} data-test-id=\"copyright-name\">\r\n                    {\" Alexis Zamanidis\"}\r\n                </b>\r\n            </a>\r\n        </h5>\r\n    );\r\n};\r\n\r\nconst Footer: FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box data-test-id=\"footer\" className={classes.root} bgcolor=\"primary.main\">\r\n            <Copyright data-test-id=\"copyright-inside-footer\" />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { FC } from \"react\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minHeight: \"100vh\",\r\n    },\r\n    main: {\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    footer: {\r\n        marginTop: \"auto\",\r\n    },\r\n    tabs: {\r\n        color: \"white\",\r\n    },\r\n}));\r\n\r\nconst Layout: FC = ({ children }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div data-test-id=\"layout\" className={classes.root}>\r\n            <div data-test-id=\"children\" className={classes.main}>\r\n                {children}\r\n            </div>\r\n            <div data-test-id=\"footer\" className={classes.footer}>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { FC } from \"react\";\r\nimport MyTabs from \"../components/Tabs\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst App: FC = () => {\r\n    return (\r\n        <Layout data-test-id=\"layout\">\r\n            <MyTabs data-test-id=\"tabs\" />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        background: {\r\n            default: colors.common.white,\r\n            paper: colors.common.white,\r\n        },\r\n        primary: {\r\n            main: \"#3F51B5\",\r\n        },\r\n        secondary: {\r\n            main: \"#fff\",\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            \"-apple-system\",\r\n            \"BlinkMacSystemFont\",\r\n            '\"Segoe UI\"',\r\n            \"Roboto\",\r\n            '\"Helvetica Neue\"',\r\n            \"Arial\",\r\n            \"sans-serif\",\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(\",\"),\r\n        fontSize: 15,\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        \"@global\": {\r\n            \"*\": {\r\n                boxSizing: \"border-box\",\r\n            },\r\n            html: {\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n            },\r\n            body: {\r\n                backgroundColor: \"#f4f6f8\",\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n            },\r\n            a: {\r\n                textDecoration: \"none\",\r\n            },\r\n        },\r\n    })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n    useStyles();\r\n\r\n    return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { FC } from \"react\";\nimport theme from \"../theme\";\nimport { ProviderPros } from \"./types\";\nimport GlobalStyles from \"../globalStyles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nconst Providers: FC<ProviderPros> = ({ children }) => {\n    return (\n        <QueryClientProvider client={queryClient}>\n            <ThemeProvider theme={theme}>\n                <GlobalStyles />\n                {children}\n            </ThemeProvider>\n        </QueryClientProvider>\n    );\n};\n\nexport default Providers;\n","import \"./index.css\";\nimport App from \"./pages\";\nimport ReactDOM from \"react-dom\";\nimport Providers from \"./providers\";\n\nReactDOM.render(\n    <Providers>\n        <App />\n    </Providers>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}