{"version":3,"sources":["components/Tabs/config.tsx","components/AboutMe/Contact/config.tsx","components/AboutMe/Contact/index.tsx","components/AboutMe/Hobbies/config.tsx","components/AboutMe/Hobbies/index.tsx","utilities/index.tsx","services/config.tsx","services/GitHub/GitHub.tsx","components/AboutMe/Personal/index.tsx","components/AboutMe/Education/config.tsx","components/AboutMe/Education/index.tsx","components/AboutMe/Experience/config.tsx","components/AboutMe/Experience/index.tsx","components/AboutMe/ButtonLinks/config.tsx","components/CustomButtonLink/index.tsx","components/AboutMe/ButtonLinks/index.tsx","components/AboutMe/PassionAbout/config.tsx","components/AboutMe/PassionAbout/index.tsx","components/AboutMe/index.tsx","components/Portfolio/GitHub/Repositories/CardComponent/index.tsx","components/Portfolio/GitHub/Repositories/index.tsx","components/CustomHooks/useDebounce.tsx","components/Portfolio/GitHub/useGitHubFaIconSpinner.tsx","components/Portfolio/GitHub/index.tsx","components/Portfolio/GitHub/filterHooks.tsx","components/Portfolio/index.tsx","components/Tabs/index.tsx","components/Tabs/useTabs.tsx","components/Footer/index.tsx","components/Layout/index.tsx","pages/index.tsx","theme/index.tsx","globalStyles/index.tsx","index.tsx"],"names":["tabItems","label","icon","AccountBox","Work","contacts","name","link","useStyles","makeStyles","theme","title","color","palette","text","primary","list","padding","item","Contact","classes","Box","mb","fontWeight","className","Typography","variant","List","map","index","ListItem","Link","href","target","rel","component","hobbies","Hobbies","calculateAge","dateOfBirth","todayDate","Date","todayDay","getDate","todayMonth","getMonth","todayYear","getFullYear","birthDate","birthDay","birthMonth","age","getOptions","baseUrl","endPoint","parameters","url","URLSearchParams","toString","method","headers","Accept","basePath","this","username","axios","repository","avatar","margin","width","spacing","height","marginBottom","personal","textAlign","bio","Personal","useQuery","GitHub","getUserData","then","data","refetchOnMount","cacheTime","Infinity","isLoading","isError","display","justifyContent","CircularProgress","Alert","severity","Avatar","alt","src","avatar_url","location","education","university","duration","description","marginRight","itemName","itemDescription","itemLocation","itemDuration","itemLinkIcon","itemSlash","Education","useTheme","matches","useMediaQuery","breakpoints","up","flexDirection","experience","from","to","jobTitle","company","typeOfEmployee","Experience","buttons","button","outline","transition","borderRadius","outlineOffset","boxShadow","CustomButtonLink","size","data-test-id","Button","startIcon","root","ButtonLinks","passionateAbout","PassionateAbout","marginTop","paper","secondary","AboutMe","Container","maxWidth","Paper","CardComponent","language","stargazers_count","forks_count","html_url","Card","CardContent","gutterBottom","CardActions","style","grid","Repositories","repositories","Grid","container","repo","xs","sm","md","id","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchFields","search","select","GitHubService","getUserRepositories","setSearch","handleSearch","e","useSearch","debouncedSearch","selectedLanguage","setSelectedLanguage","languages","useMemo","undefined","uniqueLanguages","Set","filter","Array","handleLanguage","useUniqueLanguages","computedData","tempRepositories","length","toLowerCase","includes","useFilteredData","gitHubFaIcon","useGitHubFaIconSpinner","Tooltip","placement","TextField","onChange","FormControl","InputLabel","Select","native","Portfolio","tabs","MyTabs","setValue","showTabContent","handleTabs","event","newValue","useTabs","Fragment","bgcolor","Tabs","TabIndicatorProps","tabItem","Tab","alignItems","a","fontSize","Copyright","Footer","minHeight","main","paddingBottom","footer","Layout","children","App","createMuiTheme","background","default","colors","common","white","typography","fontFamily","join","createStyles","boxSizing","html","body","backgroundColor","textDecoration","GlobalStyles","queryClient","QueryClient","ReactDOM","render","QueryClientProvider","client","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a8f63aac.chunk.js","sourcesContent":["import { TabItem } from \"./types\";\nimport { AccountBox, Work } from \"@material-ui/icons\";\n\nconst tabItems: TabItem[] = [\n    { label: \"ABOUT ME\", icon: <AccountBox /> },\n    { label: \"PORTFOLIO\", icon: <Work /> },\n];\n\nexport { tabItems };\n","import { ContactItem } from \"./types\";\n\nconst contacts: ContactItem[] = [\n    {\n        icon: \"fa fa-phone\",\n        name: \"+30 698-044-3908\",\n        link: \"tel:+30698-044-3908\",\n    },\n    {\n        icon: \"fa fa-envelope\",\n        name: \"alexiszamanidis@outlook.com\",\n        link: \"mailto:alexiszamanidis@outlook.com\",\n    },\n];\n\nexport { contacts };\n","import { FC } from \"react\";\nimport { contacts } from \"./config\";\nimport { Box, Link, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n    link: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Contact: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Contact</Typography>\n            </Box>\n            <List className={classes.list}>\n                {contacts.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Link\n                                href={item.link}\n                                className={classes.link}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                <Typography component={\"span\"}>\n                                    <div className=\"contact\">\n                                        <i className={classes.title + \" \" + item.icon}></i>\n                                        {item.name}\n                                    </div>\n                                </Typography>\n                            </Link>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Contact;\n","import { HobbyItem } from \"./types\";\n\nconst hobbies: HobbyItem[] = [\n    {\n        name: \"Playing Football and Basketball\",\n    },\n    {\n        name: \"Calisthenics Workout\",\n    },\n];\n\nexport { hobbies };\n","import { FC } from \"react\";\nimport { hobbies } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Hobbies: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Hobbies</Typography>\n            </Box>\n            <List className={classes.list}>\n                {hobbies.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default Hobbies;\n","export const trimString = (string: string | null, limit: number): string => {\n    return string !== null\n        ? string.length <= limit\n            ? string\n            : string.substring(0, limit) + \"...\"\n        : \"\";\n};\n\nexport const calculateAge = (dateOfBirth: string): number => {\n    let todayDate = new Date();\n    let todayDay = todayDate.getDate();\n    let todayMonth = todayDate.getMonth();\n    let todayYear = todayDate.getFullYear();\n\n    let birthDate = new Date(dateOfBirth);\n    let birthDay = birthDate.getDate();\n    let birthMonth = birthDate.getMonth();\n    let birthYear = birthDate.getFullYear();\n\n    let age = todayYear - birthYear;\n\n    if (todayMonth > birthMonth || (todayMonth === birthMonth && todayDay >= birthDay)) return age;\n    else return age - 1;\n};\n\nexport const findByDataTestIdAttribute = (component: any, attribute: string) => {\n    const wrapper = component.find(`[data-test-id=\"${attribute}\"]`);\n    return wrapper;\n};\n","export const getOptions = (baseUrl: string, endPoint: string, parameters?: any): object => {\n    return {\n        url: `${baseUrl}${endPoint}?` + new URLSearchParams(parameters).toString(),\n        method: \"GET\",\n        headers: {\n            Accept: \"application/vnd.github.v3+json\",\n        },\n    };\n};\n","import axios from \"axios\";\nimport { getOptions } from \"../config\";\n\n// const clientId = \"\";\n// const clientSecret = \"\";\n// const oauth = \"clientId=\"+{clientId}+\"&clientSecret\"+{clientSecret};\n\nclass GitHubService {\n    basePath: string;\n\n    constructor() {\n        this.basePath = \"https://api.github.com\";\n    }\n\n    getUserData(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}`));\n    }\n\n    getUserRepositories(username: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/repos`));\n    }\n\n    getRepositoryTopics(username: string, repository: string) {\n        return axios(getOptions(`${this.basePath}`, `/users/${username}/${repository}/topics`));\n    }\n}\n\nexport default new GitHubService();\n","import { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { calculateAge } from \"../../../utilities\";\nimport GitHub from \"../../../services/GitHub/GitHub\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        margin: \"auto\",\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: \"15px\",\n    },\n    personal: {\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n    },\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        color: theme.palette.text.primary,\n    },\n    bio: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst Personal: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\n        \"gitHubUserData\",\n        () => GitHub.getUserData(\"alexiszamanidis\").then(({ data }) => data),\n        { refetchOnMount: false, cacheTime: Infinity }\n    );\n\n    return (\n        <Box mb={5}>\n            {isLoading ? (\n                <Box display=\"flex\" justifyContent=\"center\">\n                    <CircularProgress />\n                </Box>\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <div>\n                    <Avatar\n                        alt=\"Alexis Zamanidis\"\n                        src={data.avatar_url}\n                        className={classes.avatar}\n                    />\n                    <div className={classes.personal}>\n                        <div className={classes.item + \" personal\"}>\n                            <Typography>\n                                <i className={classes.title + \" fa fa-user\"}></i>\n                                {data.name} <i className={classes.title + \" fa fa-map-marker\"}></i>\n                                {data.location}{\" \"}\n                                <i className={classes.title + \" fa fa-birthday-cake\"}></i>\n                                {calculateAge(\"1998-01-20\")}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                        <Typography variant=\"h6\">Summary</Typography>\n                    </Box>\n                    <Typography className={classes.bio}>{data.bio}</Typography>\n                </div>\n            )}\n        </Box>\n    );\n};\n\nexport default Personal;\n","import { EducationItem } from \"./types\";\n\nconst education: EducationItem[] = [\n    {\n        university: \"National & Kapodistrian University of Athens\",\n        duration: \"Oct 2016 - Feb 2021\",\n        description:\n            \"B.Sc. in Computer Science - Specializations: Software, Data & Knowledge Management.\",\n        location: \"Athens, Greece\",\n        link: \"https://www.di.uoa.gr/\",\n    },\n];\n\nexport { education };\n","import { FC } from \"react\";\nimport { education } from \"./config\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box, Link, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemName: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemLocation: {\n        marginRight: \"5px\",\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n    itemLinkIcon: {\n        color: \"black\",\n    },\n    itemSlash: {\n        display: \"none\",\n        // eslint-disable-next-line\n        [\"@media (min-width:960px)\"]: {\n            display: \"block\",\n            marginRight: \"5px\",\n        },\n    },\n}));\n\nconst Education: FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Education</Typography>\n            </Box>\n            {education.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box\n                            display=\"flex\"\n                            flexDirection={matches ? \"row\" : \"column\"}\n                            justifyContent=\"space-between\"\n                        >\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\n                                <Typography color=\"primary\" className={classes.itemName}>\n                                    {item.university}\n                                </Typography>\n                                <Box display=\"flex\" flexDirection=\"row\">\n                                    <Typography className={classes.itemSlash}>{\" | \"}</Typography>\n                                    <Typography className={classes.itemLocation}>\n                                        {item.location}\n                                    </Typography>\n                                    <Link href={item.link} target=\"_blank\" rel=\"noreferrer\">\n                                        <LinkIcon className={classes.itemLinkIcon} />\n                                    </Link>\n                                </Box>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.duration}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Education;\n","import { ExperienceItem } from \"./types\";\n\nconst experience: ExperienceItem[] = [\n    {\n        from: \"Oct 2020\",\n        to: \"April 2021\",\n        jobTitle: \"Full Stack Developer, Intern\",\n        company: \"ITML\",\n        location: \"Athens, Greece\",\n        typeOfEmployee: \"Remote Full-Time\",\n        description:\n            \"I built a Web Application which will be used by Doctors in their daily life  with main functionalities of automating Visits, Prescriptions and Referrals. \" +\n            \"But also it has other very useful functionalities such as Calendar, Pdf Generator for handwritten Prescriptions, Medicines Statistics. \" +\n            \"Its basic functionality is based on the API provided by IDIKA which is the official provider of e-Prescription in Greece.\",\n        link: null,\n    },\n];\n\nexport { experience };\n","import { FC } from \"react\";\nimport { experience } from \"./config\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    item: {\n        marginRight: \"5px\",\n    },\n    itemDescription: {\n        color: theme.palette.text.primary,\n    },\n    itemDuration: {\n        color: theme.palette.text.primary,\n    },\n    itemSlash: {\n        display: \"none\",\n        // eslint-disable-next-line\n        [\"@media (min-width:960px)\"]: {\n            display: \"block\",\n            marginRight: \"5px\",\n        },\n    },\n}));\n\nconst Experience: FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Experience</Typography>\n            </Box>\n            {experience.map((item, index) => {\n                return (\n                    <Box key={index} display=\"flex\" flexDirection=\"column\">\n                        <Box\n                            display=\"flex\"\n                            flexDirection={matches ? \"row\" : \"column\"}\n                            justifyContent=\"space-between\"\n                        >\n                            <Box display=\"flex\" flexDirection={matches ? \"row\" : \"column\"}>\n                                <Typography\n                                    color=\"primary\"\n                                    className={classes.item}\n                                >{`${item.jobTitle} `}</Typography>\n                                <Typography className={classes.itemSlash}>{\" | \"}</Typography>\n                                <Typography>{`${item.company} - ${item.location} (${item.typeOfEmployee})`}</Typography>\n                            </Box>\n                            <Typography className={classes.itemDuration}>\n                                {item.from} - {item.to}\n                            </Typography>\n                        </Box>\n                        <Typography className={classes.itemDescription}>\n                            {item.description}\n                        </Typography>\n                    </Box>\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default Experience;\n","import { ButtonItem } from \"./types\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst buttons: ButtonItem[] = [\n    {\n        text: \"CV\",\n        icon: <ReceiptIcon />,\n        link: \"https://drive.google.com/uc?id=1gqb_C5kko846r6uYC7grd1VRfaSxjwuG\",\n    },\n    {\n        text: \"LinkedIn\",\n        icon: <LinkedInIcon />,\n        link: \"http://linkedin.com/in/alexiszamanidis\",\n    },\n    {\n        text: \"GitHub\",\n        icon: <GitHubIcon />,\n        link: \"https://github.com/alexiszamanidis\",\n    },\n];\n\nexport { buttons };\n","import { FC } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { CustomButtonLinkProps } from \"./types\";\n\nconst useStyles = makeStyles({\n    button: {\n        margin: \"5px 5px 5px 5px\",\n        color: \"white\",\n        outline: \"0px solid white\",\n        transition: \"outline-offset 250ms ease\",\n        borderRadius: \"0\",\n        \"&:hover, &:focus\": {\n            outline: \"2px solid white\",\n            outlineOffset: \"-5px\",\n            boxShadow: \"2px 2px gray\",\n        },\n    },\n});\n\nconst CustomButtonLink: FC<CustomButtonLinkProps> = ({ link, size, icon, text }) => {\n    const classes = useStyles();\n\n    return (\n        <a data-test-id=\"custom-button-link-a\" href={link} target=\"_blank\" rel=\"noreferrer\">\n            <Button\n                data-test-id=\"custom-button-link-button\"\n                color=\"primary\"\n                variant=\"contained\"\n                size={size}\n                startIcon={icon}\n                className={classes.button}\n            >\n                {text}\n            </Button>\n        </a>\n    );\n};\n\nexport default CustomButtonLink;\n","import { FC } from \"react\";\nimport { buttons } from \"./config\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport CustomButtonLink from \"../../CustomButtonLink\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n    },\n});\n\nconst ButtonLinks: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={3} className={classes.root}>\n            {buttons.map((button, index) => {\n                return (\n                    <CustomButtonLink\n                        key={index}\n                        link={button.link}\n                        size=\"medium\"\n                        icon={button.icon}\n                        text={button.text}\n                    />\n                );\n            })}\n        </Box>\n    );\n};\n\nexport default ButtonLinks;\n","import { PassionateAboutItem } from \"./types\";\n\nconst passionateAbout: PassionateAboutItem[] = [\n    {\n        name: \"Full Stack Development mainly with React.js, Spring Boot and MySQL\",\n    },\n    {\n        name: \"Machine Learning - Data Mining\",\n    },\n    {\n        name: \"Parallel Programming\",\n    },\n];\n\nexport { passionateAbout };\n","import { FC } from \"react\";\nimport { passionateAbout } from \"./config\";\nimport { Box, List, ListItem, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.text.primary,\n    },\n    list: {\n        padding: \"0px 0px 0px 0px\",\n    },\n    item: {\n        padding: \"0px 0px 0px 0px\",\n        color: theme.palette.text.primary,\n    },\n}));\n\nconst PassionateAbout: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Box mb={5}>\n            <Box mb={1} fontWeight=\"fontWeightBold\" className={classes.title}>\n                <Typography variant=\"h6\">Passionate About</Typography>\n            </Box>\n            <List className={classes.list}>\n                {passionateAbout.map((item, index) => {\n                    return (\n                        <ListItem key={index} className={classes.item}>\n                            <Typography>{`${index + 1}. ${item.name}`}</Typography>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Box>\n    );\n};\n\nexport default PassionateAbout;\n","import { FC } from \"react\";\nimport Contact from \"./Contact\";\nimport Hobbies from \"./Hobbies\";\nimport Personal from \"./Personal\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport ButtonLinks from \"./ButtonLinks\";\nimport PassionateAbout from \"./PassionAbout\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"25px\",\n    },\n    paper: {\n        padding: theme.spacing(3),\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst AboutMe: FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Container data-test-id=\"about-me\" maxWidth=\"md\" className={classes.root}>\n            <Paper className={classes.paper}>\n                <Personal data-test-id=\"personal\" />\n                <Education data-test-id=\"education\" />\n                <Experience data-test-id=\"experience\" />\n                <PassionateAbout data-test-id=\"passionate-about\" />\n                <Hobbies data-test-id=\"hobbies\" />\n                <Contact data-test-id=\"contact\" />\n                <ButtonLinks data-test-id=\"button-links\" />\n            </Paper>\n        </Container>\n    );\n};\n\nexport default AboutMe;\n","import { FC } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { CardComponentProps } from \"./types\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CustomButtonLink from \"../../../../CustomButtonLink\";\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n    },\n});\n\nconst CardComponent: FC<CardComponentProps> = ({\n    name,\n    description,\n    language,\n    stargazers_count,\n    forks_count,\n    html_url,\n}) => {\n    const classes = useStyles();\n    return (\n        <Card data-test-id=\"card-component\" className={classes.root}>\n            <CardContent>\n                <Typography data-test-id=\"card-component-name\" color=\"textSecondary\" gutterBottom>\n                    {name}\n                </Typography>\n                <Typography data-test-id=\"card-component-description\">{description}</Typography>\n                <Typography data-test-id=\"card-component-language-star-fork\">\n                    <b>language</b>: {language} <i className={\"fa fa-star\"}></i>\n                    {` ${stargazers_count} `}\n                    <i className=\"fa fa-code-fork\"></i>\n                    {` ${forks_count} `}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <CustomButtonLink\n                    data-test-id=\"card-component-custom-button-link\"\n                    link={html_url}\n                    size=\"small\"\n                    icon={<i style={{ marginRight: \"5px\" }} className={\"fa fa-github\"}></i>}\n                    text={\"View on GitHub\"}\n                />\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CardComponent;\n","import { FC } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Repo, RepoProps } from \"./types\";\nimport CardComponent from \"./CardComponent\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    grid: {\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n    },\n});\n\nconst Repositories: FC<RepoProps> = ({ repositories }) => {\n    const classes = useStyles();\n\n    return (\n        <Grid data-test-id=\"repositories\" container spacing={3} className={classes.grid}>\n            {repositories.map((repo: Repo) => {\n                return (\n                    <Grid data-test-id=\"repository\" item xs={12} sm={4} md={4} key={repo.id}>\n                        <CardComponent\n                            data-test-id=\"repository-card-component\"\n                            name={repo.name}\n                            description={repo.description}\n                            language={repo.language}\n                            stargazers_count={repo.stargazers_count}\n                            forks_count={repo.forks_count}\n                            html_url={repo.html_url}\n                        />\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n};\n\nexport default Repositories;\n","import { useEffect, useState } from \"react\";\n\nfunction useDebounce(value: string, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;\n","import { useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n    },\n});\n\nexport const useGitHubFaIconSpinner = (isLoading: boolean): JSX.Element => {\n    const classes = useStyles();\n\n    const gitHubFaIcon = useMemo(() => {\n        return (\n            <div className={`${classes.root} fa-3x`}>\n                <i className={\"fa fa-github\" + (isLoading === true ? \" fa-spin\" : \"\")}></i>\n            </div>\n        );\n    }, [isLoading, classes.root]);\n\n    return gitHubFaIcon;\n};\n","import { FC } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Repositories from \"./Repositories\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useDebounce from \"../../CustomHooks/useDebounce\";\nimport GitHubService from \"../../../services/GitHub/GitHub\";\nimport { useGitHubFaIconSpinner } from \"./useGitHubFaIconSpinner\";\nimport { useFilteredData, useSearch, useUniqueLanguages } from \"./filterHooks\";\nimport { TextField, FormControl, InputLabel, Select, Tooltip } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"300px\",\n        margin: \"30px\",\n    },\n    searchFields: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            flexDirection: \"row\",\n        },\n    },\n    search: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"30%\",\n        },\n    },\n    select: {\n        width: \"100%\",\n        margin: \"5px 5px 5px 0px\",\n        // eslint-disable-next-line\n        [\"@media (min-width:600px)\"]: {\n            width: \"30%\",\n        },\n    },\n});\n\nconst GitHub: FC = () => {\n    const classes = useStyles();\n\n    const { isLoading, isError, data } = useQuery(\n        \"gitHubRepositories\",\n        () => GitHubService.getUserRepositories(\"alexiszamanidis\").then(({ data }) => data),\n        { refetchOnMount: false, cacheTime: Infinity }\n    );\n\n    const { search, handleSearch } = useSearch();\n    const debouncedSearch = useDebounce(search, 500);\n    const { selectedLanguage, handleLanguage, languages } = useUniqueLanguages(data);\n    const { computedData } = useFilteredData(data, debouncedSearch, selectedLanguage);\n\n    const gitHubFaIcon = useGitHubFaIconSpinner(isLoading);\n\n    return (\n        <div>\n            {isLoading ? (\n                gitHubFaIcon\n            ) : isError ? (\n                <Alert severity=\"error\">Something happened</Alert>\n            ) : (\n                <div>\n                    {gitHubFaIcon}\n                    <div className={classes.searchFields}>\n                        <Tooltip\n                            data-test-id=\"tooltip-search-text-field\"\n                            title=\"filter by repository name and description\"\n                            placement=\"top\"\n                        >\n                            <TextField\n                                data-test-id=\"search-text-field\"\n                                label=\"Search\"\n                                variant=\"outlined\"\n                                className={classes.search}\n                                onChange={handleSearch}\n                                value={search}\n                            />\n                        </Tooltip>\n                        <FormControl\n                            data-test-id=\"select-form-control\"\n                            variant=\"outlined\"\n                            className={classes.select}\n                        >\n                            <InputLabel data-test-id=\"select-input-label\">Language</InputLabel>\n                            <Select\n                                data-test-id=\"select\"\n                                native\n                                label=\"Language\"\n                                value={selectedLanguage}\n                                onChange={handleLanguage}\n                            >\n                                <option value=\"\" />\n                                {languages.map((language, index) => {\n                                    return (\n                                        <option key={index} value={language}>\n                                            {language}\n                                        </option>\n                                    );\n                                })}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <Repositories data-test-id=\"repositories\" repositories={computedData} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default GitHub;\n","import { Repo } from \"./types\";\nimport { useState, useMemo } from \"react\";\n\nexport const useSearch = () => {\n    const [search, setSearch] = useState(\"\");\n    const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(e.target.value);\n    };\n    return { search, setSearch, handleSearch };\n};\n\nexport const useUniqueLanguages = (data: Repo[]) => {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const handleLanguage = (e: React.ChangeEvent<{ value: unknown }>) => {\n        setSelectedLanguage(e.target.value as string);\n    };\n\n    const languages = useMemo(() => {\n        if (data === undefined) return [];\n        let uniqueLanguages = new Set<string>(\n            data\n                .filter(\n                    ({ language }: { language: string | null }) =>\n                        language !== null && language !== \"\"\n                )\n                .map(({ language }: { language: string }) => language)\n        );\n        return Array.from(uniqueLanguages);\n    }, [data]);\n\n    return { selectedLanguage, setSelectedLanguage, handleLanguage, languages };\n};\n\nexport const useFilteredData = (\n    data: Repo[],\n    debouncedSearch: string,\n    selectedLanguage: string\n) => {\n    const computedData = useMemo(() => {\n        if (data === undefined) return [];\n        let tempRepositories = data;\n        if (debouncedSearch.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ name, description }: { name: string; description: string }) => {\n                    return (\n                        name.toString().toLowerCase().includes(debouncedSearch.toLowerCase()) ||\n                        description.toString().toLowerCase().includes(debouncedSearch.toLowerCase())\n                    );\n                }\n            );\n        }\n\n        if (selectedLanguage.length > 0) {\n            tempRepositories = tempRepositories.filter(\n                ({ language }: { language: string | null }) => {\n                    return language === selectedLanguage;\n                }\n            );\n        }\n\n        return tempRepositories;\n    }, [data, debouncedSearch, selectedLanguage]);\n\n    return { computedData };\n};\n","import { FC } from \"react\";\nimport GitHub from \"./GitHub\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Portfolio: FC = () => {\n    return (\n        <Container data-test-id=\"card-portfolio\">\n            <GitHub data-test-id=\"github\" />\n        </Container>\n    );\n};\n\nexport default Portfolio;\n","import React, { FC } from \"react\";\nimport { tabItems } from \"./config\";\nimport { useTabs } from \"./useTabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    tabs: {\n        color: \"white\",\n    },\n});\n\nconst MyTabs: FC = () => {\n    const classes = useStyles();\n\n    const { value, handleTabs, showTabContent } = useTabs();\n\n    return (\n        <React.Fragment>\n            <Box data-test-id=\"tabs\" bgcolor=\"primary.main\">\n                <Tabs\n                    value={value}\n                    onChange={handleTabs}\n                    variant=\"fullWidth\"\n                    className={classes.tabs}\n                    TabIndicatorProps={{\n                        style: {\n                            height: \"5px\",\n                        },\n                    }}\n                >\n                    {tabItems.map((tabItem, index) => {\n                        return <Tab key={index} {...tabItem} />;\n                    })}\n                </Tabs>\n            </Box>\n            {showTabContent}\n        </React.Fragment>\n    );\n};\n\nexport default MyTabs;\n","import AboutMe from \"../AboutMe\";\nimport Portfolio from \"../Portfolio\";\nimport { useState, useMemo } from \"react\";\n\nexport const useTabs = () => {\n    const [value, setValue] = useState<number>(0);\n\n    const showTabContent: JSX.Element | null = useMemo(() => {\n        if (value === 0) return <AboutMe />;\n        else if (value === 1) return <Portfolio />;\n        else return null;\n    }, [value]);\n\n    const handleTabs = (event: any, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return { value, setValue, handleTabs, showTabContent };\n};\n","import { FC } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 1),\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    a: {\n        color: \"white\",\n        fontSize: \"15px\",\n    },\n}));\n\nexport const Copyright: FC = () => {\n    const classes = useStyles();\n    return (\n        <h5 data-test-id=\"copyright\" className=\"copyright\">\n            © {new Date().getFullYear()} Copyright:\n            <a\n                className=\"underline\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/alexiszamanidis\"\n                target=\"_blank\"\n            >\n                <b className={classes.a} data-test-id=\"copyright-name\">\n                    {\" Alexis Zamanidis\"}\n                </b>\n            </a>\n        </h5>\n    );\n};\n\nconst Footer: FC = () => {\n    const classes = useStyles();\n    return (\n        <Box data-test-id=\"footer\" className={classes.root} bgcolor=\"primary.main\">\n            <Copyright data-test-id=\"copyright-inside-footer\" />\n        </Box>\n    );\n};\n\nexport default Footer;\n","import { makeStyles } from \"@material-ui/core\";\nimport { FC } from \"react\";\nimport Footer from \"../Footer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n    },\n    main: {\n        paddingBottom: theme.spacing(3),\n    },\n    footer: {\n        marginTop: \"auto\",\n    },\n    tabs: {\n        color: \"white\",\n    },\n}));\n\nconst Layout: FC = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <div data-test-id=\"layout\" className={classes.root}>\n            <div data-test-id=\"children\" className={classes.main}>\n                {children}\n            </div>\n            <div data-test-id=\"footer\" className={classes.footer}>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;\n","import { FC } from \"react\";\nimport MyTabs from \"../components/Tabs\";\nimport Layout from \"../components/Layout\";\n\nconst App: FC = () => {\n    return (\n        <Layout data-test-id=\"layout\">\n            <MyTabs data-test-id=\"tabs\" />\n        </Layout>\n    );\n};\n\nexport default App;\n","import { createMuiTheme, colors } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: colors.common.white,\n            paper: colors.common.white,\n        },\n        primary: {\n            main: \"#3F51B5\",\n        },\n        secondary: {\n            main: \"#fff\",\n        },\n    },\n    typography: {\n        fontFamily: [\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n    },\n});\n\nexport default theme;\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        \"@global\": {\n            \"*\": {\n                boxSizing: \"border-box\",\n            },\n            html: {\n                height: \"100%\",\n                width: \"100%\",\n            },\n            body: {\n                backgroundColor: \"#f4f6f8\",\n                height: \"100%\",\n                width: \"100%\",\n            },\n            a: {\n                textDecoration: \"none\",\n            },\n        },\n    })\n);\n\nconst GlobalStyles = () => {\n    useStyles();\n\n    return null;\n};\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages\";\nimport \"./index.css\";\n\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport theme from \"./theme\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport GlobalStyles from \"./globalStyles\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n    <QueryClientProvider client={queryClient}>\n        <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            <App />\n        </ThemeProvider>\n    </QueryClientProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}